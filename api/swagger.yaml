---
swagger: "2.0"
info:
  description: "This document describes Uptrends API version 4. This Swagger environment\
    \ also lets you execute API methods directly.\n\nPlease note that this is not\
    \ a sandbox environment: these API methods operate directly on your actual Uptrends\
    \ account.\n\nFor more information, please visit https://www.uptrends.com/api."
  version: "1.0.0"
  title: "Uptrends API v4"
host: "api.uptrends.com"
basePath: "/v4"
tags:
- name: "Timezone"
  description: "Timezone operations"
- name: "Checkpoint"
  description: "Retrieving checkpoints and checkpoint servers"
- name: "RUM"
  description: "Getting RUM data"
- name: "Account"
  description: "Getting account data"
- name: "Dashboard"
  description: "Modifying dashboards"
- name: "PublicStatusPage"
  description: "Modifying public status pages"
- name: "ScheduledReport"
  description: "Modifying scheduled reports"
- name: "SLA"
  description: "Getting SLA data"
- name: "Statistics"
  description: "Retrieving statistics data"
- name: "Alert"
  description: "Getting alert data"
- name: "Integration"
  description: "Retrieving integrations"
- name: "Status"
  description: "Retrieving status"
- name: "AlertDefinition"
  description: "Modifying alert definitions"
- name: "MonitorGroup"
  description: "Working with monitor groups"
- name: "Operator"
  description: "Working with operators"
- name: "OutgoingPhoneNumber"
  description: "Outgoing phone number operations"
- name: "OperatorGroup"
  description: "Working with operator groups"
- name: "MonitorCheck"
  description: "Getting monitor check data"
- name: "Monitor"
  description: "Modifying monitors"
- name: "Register"
  description: "Creating a new API account"
- name: "Vault"
  description: "Vault operations"
schemes:
- "https"
consumes:
- "application/json"
- "application/xml"
produces:
- "application/json"
- "application/xml"
paths:
  /Timezone:
    get:
      tags:
      - "Timezone"
      summary: "Gets all timezones available."
      operationId: "Timezone_GetAllTimezones"
      parameters: []
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Timezone"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Timezone/{timezoneId}:
    get:
      tags:
      - "Timezone"
      summary: "Gets the timezone with the specified Id."
      operationId: "Timezone_GetTimezoneById"
      parameters:
      - name: "timezoneId"
        in: "path"
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "TimezoneId"
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Timezone"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /PrivateCheckpointHealth:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the status of the specified private checkpoints."
      operationId: "PrivateCheckpointHealth_GetSpecifiedPrivateCheckpointHealth"
      parameters:
      - name: "filter"
        in: "query"
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpointsHealth"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "No private checkpoints could be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /PrivateCheckpointHealthForRegion:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the status of the private checkpoints in the given region."
      operationId: "PrivateCheckpointHealth_GetPrivateCheckpointHealthForRegion"
      parameters:
      - name: "regionId"
        in: "query"
        description: "The id of the region."
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "RegionId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpointsHealth"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "No private checkpoints could be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Rum/Website:
    get:
      tags:
      - "RUM"
      summary: "Returns the definition of all RUM websites available in the account."
      operationId: "Rum_GetRumWebsites"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RumWebsite"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Rum/Website/{rumWebsiteGuid}/Metrics:
    get:
      tags:
      - "RUM"
      summary: "Returns all metrics of the specified RUM website."
      operationId: "Rum_GetRumWebsiteMetrics"
      parameters:
      - name: "rumWebsiteGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "RumWebsiteGuid"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RumMetricValues"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified RUM website was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Rum/Website/Metrics:
    get:
      tags:
      - "RUM"
      summary: "Returns all metrics of all RUM websites."
      operationId: "Rum_GetRumMetricsForAllWebsites"
      parameters:
      - name: "WebsiteFilter"
        in: "query"
        description: "A search pattern to filter for matching RUM website descriptions.\
          \ Wildcards (? and *) are allowed.\nTo filter for multiple patterns, use\
          \ the | symbol as separator."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "WebsiteFilter"
        x-optionalDataType: "String"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RumWebsiteWithMetricValues"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Account:
    get:
      tags:
      - "Account"
      summary: "Returns the account statistics."
      operationId: "Account_GetAccountStatistics"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "Request completed successfully."
          schema:
            $ref: "#/definitions/AccountStatistics"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Account/Settings:
    get:
      tags:
      - "Account"
      summary: "Returns account general settings."
      operationId: "Account_GetSettings"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "Request completed successfully."
          schema:
            $ref: "#/definitions/AccountSettings"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /CheckpointRegion:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns all the checkpoint regions."
      operationId: "CheckpointRegion_GetAllCheckpointRegions"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CheckpointRegion"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /CheckpointRegion/{checkpointRegionId}:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the specified checkpoint region."
      operationId: "CheckpointRegion_GetSpecifiedCheckpointRegion"
      parameters:
      - name: "checkpointRegionId"
        in: "path"
        description: "The id for the specified checkpoint region."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "CheckpointRegionId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpointRegion"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The checkpoint region could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /CheckpointRegion/{checkpointRegionId}/Checkpoint:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the checkpoints for the specified checkpoint region."
      operationId: "CheckpointRegion_GetCheckpointRegionCheckpoints"
      parameters:
      - name: "checkpointRegionId"
        in: "path"
        description: "The id for the specified checkpoint region."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "CheckpointRegionId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Checkpoint"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The checkpoint region could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Dashboard:
    get:
      tags:
      - "Dashboard"
      summary: "Returns data for all dashboards."
      operationId: "Dashboard_GetAllDashboards"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Dashboard"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Dashboard/{dashboardGuid}:
    get:
      tags:
      - "Dashboard"
      summary: "Returns data for the specified dashboard."
      operationId: "Dashboard_GetOneDashboard"
      parameters:
      - name: "dashboardGuid"
        in: "path"
        description: "The guid of the specified dashboard."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "DashboardGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Dashboard"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified dashboard could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "Dashboard"
      summary: "Update the specified dashboard."
      operationId: "Dashboard_UpdateDashboard"
      parameters:
      - name: "dashboardGuid"
        in: "path"
        description: "The guid of the specified dashboard."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "DashboardGuid"
      - in: "body"
        name: "dashboard"
        description: "The details for the dashboard."
        required: false
        schema:
          $ref: "#/definitions/Dashboard"
        x-nullable: true
        x-exportParamName: "Dashboard"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Dashboard"
      summary: "Delete the specified dashboard."
      operationId: "Dashboard_DeleteDashboard"
      parameters:
      - name: "dashboardGuid"
        in: "path"
        description: "The guid of the specified dashboard."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "DashboardGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified dashboard could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "Dashboard"
      summary: "Partially update the specified dashboard."
      operationId: "Dashboard_PartiallyUpdateDashboard"
      parameters:
      - name: "dashboardGuid"
        in: "path"
        description: "The guid of the specified dashboard."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "DashboardGuid"
      - in: "body"
        name: "dashboard"
        description: "The details for the dashboard."
        required: false
        schema:
          $ref: "#/definitions/Dashboard"
        x-nullable: true
        x-exportParamName: "Dashboard"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Dashboard/{dashboardGuid}/Clone:
    post:
      tags:
      - "Dashboard"
      summary: "Clone the specified dashboard."
      operationId: "Dashboard_CloneDashboard"
      parameters:
      - name: "dashboardGuid"
        in: "path"
        description: "The guid of the specified dashboard."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "DashboardGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Dashboard"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified dashboard could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /PublicStatusPage:
    get:
      tags:
      - "PublicStatusPage"
      summary: "Returns the definition of all public status pages available in the\
        \ account."
      operationId: "PublicStatusPage_GetPublicStatusPages"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PublicStatusPage"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "PublicStatusPage"
      summary: "Creates a new public status page."
      operationId: "PublicStatusPage_PostPublicStatusPage"
      parameters:
      - in: "body"
        name: "publicStatusPage"
        description: "The complete definition for the public status page that should\
          \ be updated."
        required: false
        schema:
          $ref: "#/definitions/PublicStatusPage"
        x-nullable: true
        x-exportParamName: "PublicStatusPage"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/PublicStatusPage"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /PublicStatusPage/{publicStatusPageGuid}:
    get:
      tags:
      - "PublicStatusPage"
      summary: "Returns the definition of the specified public status page."
      operationId: "PublicStatusPage_GetPublicStatusPage"
      parameters:
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the requested public status page."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/PublicStatusPage"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "PublicStatusPage"
      summary: "Updates the definition of the specified public status page."
      description: "This methods only accepts a complete public status page definition.\
        \ We recommend retrieving the existing definition first (using the GET method).\
        \ You can then process the changes you want to make and send back the updated\
        \ definition using this PUT method."
      operationId: "PublicStatusPage_PutPublicStatusPage"
      parameters:
      - in: "body"
        name: "publicStatusPage"
        description: "The complete definition for the public status page that should\
          \ be updated."
        required: false
        schema:
          $ref: "#/definitions/PublicStatusPage"
        x-nullable: true
        x-exportParamName: "PublicStatusPage"
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "PublicStatusPage"
      summary: "Deletes the definition of the specified public status page."
      operationId: "PublicStatusPage_DeletePublicStatusPage"
      parameters:
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "PublicStatusPage"
      summary: "Partially updates the definition of the specified public status page."
      description: "This methods accepts parts of a public status page definition.\
        \ We recommend retrieving the existing definition first (using the GET method).\
        \ You can then process the changes you want to make and send back these changes\
        \ only using this PATCH method."
      operationId: "PublicStatusPage_PatchPublicStatusPage"
      parameters:
      - in: "body"
        name: "publicStatusPage"
        description: "The partial definition for the public status page that should\
          \ be updated."
        required: false
        schema:
          $ref: "#/definitions/PublicStatusPage"
        x-nullable: true
        x-exportParamName: "PublicStatusPage"
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /PublicStatusPage/{publicStatusPageGuid}/Authorization:
    get:
      tags:
      - "PublicStatusPage"
      summary: "Returns all authorizations for the specified public status page."
      operationId: "PublicStatusPage_GetAuthorizationsForPublicStatusPage"
      parameters:
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request was successful. No content is returned."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PSPAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "PublicStatusPage"
      summary: "Creates a new authorization for the specified public status page."
      description: "The AuthorizationId attribute should be omitted in the request\
        \ body. The newly created authorization will be returned in the response.\
        \ An authorization should be granted to either an individual operator, or\
        \ an operator group. Therefore, either specify the OperatorGuid attribute\
        \ or the OperatorGroupGuid attribute."
      operationId: "PublicStatusPage_AddAuthorizationToPublicStatusPage"
      parameters:
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      - in: "body"
        name: "authorization"
        description: "The complete definition of the authorization that should be\
          \ created."
        required: false
        schema:
          $ref: "#/definitions/PSPAuthorization"
        x-nullable: true
        x-exportParamName: "Authorization"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request was successful."
          schema:
            $ref: "#/definitions/PSPAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist.\nor\nThe\
            \ specified operator does not exist.\nor\nThe specified operator group\
            \ does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified public status page does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified operator does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified operator group does not exist."
            schema:
              $ref: "#/definitions/MessageList"
  /PublicStatusPage/{publicStatusPageGuid}/Authorization/{authorizationGuid}:
    delete:
      tags:
      - "PublicStatusPage"
      summary: "Removes an authorization from a public status page."
      operationId: "PublicStatusPage_RemoveAuthorizationFromPublicStatusPage"
      parameters:
      - name: "publicStatusPageGuid"
        in: "path"
        description: "The Guid of the public status page."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "PublicStatusPageGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The Guid of the authorization."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified public status page does not exist.\nor\nThe\
            \ specified authorization does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified public status page does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified authorization does not exist."
            schema:
              $ref: "#/definitions/MessageList"
  /ScheduledReport:
    get:
      tags:
      - "ScheduledReport"
      summary: "Returns data for all scheduled reports."
      operationId: "ScheduledReport_GetAllScheduledReports"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ScheduledReport"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "ScheduledReport"
      summary: "Creates a new scheduled report."
      operationId: "ScheduledReport_CreateScheduledReport"
      parameters:
      - in: "body"
        name: "scheduledReport"
        description: "The details for the scheduled report."
        required: false
        schema:
          $ref: "#/definitions/ScheduledReport"
        x-nullable: true
        x-exportParamName: "ScheduledReport"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ScheduledReport"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /ScheduledReport/{scheduledReportGuid}:
    get:
      tags:
      - "ScheduledReport"
      summary: "Returns data for the specified scheduled report."
      operationId: "ScheduledReport_GetSpecifiedScheduledReport"
      parameters:
      - name: "scheduledReportGuid"
        in: "path"
        description: "The guid of the specified scheduled report."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "ScheduledReportGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ScheduledReport"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "ScheduledReport"
      summary: "Update the specified scheduled report."
      operationId: "ScheduledReport_UpdateScheduledReport"
      parameters:
      - name: "scheduledReportGuid"
        in: "path"
        description: "The guid of the specified scheduled report."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "ScheduledReportGuid"
      - in: "body"
        name: "scheduledReport"
        description: "The details for the scheduled report."
        required: false
        schema:
          $ref: "#/definitions/ScheduledReport"
        x-nullable: true
        x-exportParamName: "ScheduledReport"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ScheduledReport"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "ScheduledReport"
      summary: "Delete the specified scheduled report."
      operationId: "ScheduledReport_DeleteSpecifiedScheduledReport"
      parameters:
      - name: "scheduledReportGuid"
        in: "path"
        description: "The guid of the specified scheduled report."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "ScheduledReportGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "ScheduledReport"
      summary: "Partially update the specified scheduled report."
      operationId: "ScheduledReport_PartiallyUpdateScheduledReport"
      parameters:
      - name: "scheduledReportGuid"
        in: "path"
        description: "The guid of the specified scheduled report."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "ScheduledReportGuid"
      - in: "body"
        name: "scheduledReport"
        description: "The details for the scheduled report."
        required: false
        schema:
          $ref: "#/definitions/ScheduledReport"
        x-nullable: true
        x-exportParamName: "ScheduledReport"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ScheduledReport"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Sla:
    get:
      tags:
      - "SLA"
      summary: "Gets a list of all SLA definitions."
      operationId: "Sla_GetSlas"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sla"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "SLA"
      summary: "Creates a new SLA."
      operationId: "Sla_CreateSla"
      parameters:
      - in: "body"
        name: "sla"
        description: "The complete SLA definition that should be created."
        required: false
        schema:
          $ref: "#/definitions/Sla"
        x-nullable: true
        x-exportParamName: "Sla"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Sla"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Sla/{slaGuid}:
    get:
      tags:
      - "SLA"
      summary: "Gets the specified SLA definition."
      operationId: "Sla_GetSla"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Sla"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified sla does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "SLA"
      summary: "Updates the definition of the specified SLA."
      description: "This methods only accepts a complete SLA definition. We recommend\
        \ retrieving the existing definition first (using the GET method). You can\
        \ then process the changes you want to make and send back the updated definition\
        \ using this PUT method."
      operationId: "Sla_PutSla"
      parameters:
      - in: "body"
        name: "sla"
        description: "The complete definition for the SLA that should be updated."
        required: false
        schema:
          $ref: "#/definitions/Sla"
        x-nullable: true
        x-exportParamName: "Sla"
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "SLA"
      summary: "Deletes the specified SLA."
      operationId: "Sla_DeleteSla"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition that should be deleted."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "SLA"
      summary: "Partially updates the definition of the specified SLA."
      description: "This methods accepts parts of a SLA definition. We recommend retrieving\
        \ the existing definition first (using the GET method). You can then process\
        \ the changes you want to make and send back these changes only using this\
        \ PATCH method."
      operationId: "Sla_PatchSla"
      parameters:
      - in: "body"
        name: "sla"
        description: "The partial definition for the SLA that should be updated."
        required: false
        schema:
          $ref: "#/definitions/Sla"
        x-nullable: true
        x-exportParamName: "Sla"
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Sla/{slaGuid}/ExclusionPeriod:
    get:
      tags:
      - "SLA"
      summary: "Gets a list of all exclusion periods for the specified SLA."
      operationId: "Sla_GetExclusionPeriods"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExclusionPeriod"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "SLA"
      summary: "Creates a new exclusion period for the specified SLA."
      operationId: "Sla_PostExclusionPeriod"
      parameters:
      - in: "body"
        name: "exclusionPeriod"
        description: "The complete definition of the exclusion period."
        required: false
        schema:
          $ref: "#/definitions/ExclusionPeriod"
        x-nullable: true
        x-exportParamName: "ExclusionPeriod"
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ExclusionPeriod"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Sla/{slaGuid}/ExclusionPeriod/{exclusionPeriodId}:
    get:
      tags:
      - "SLA"
      summary: "Gets the specified exclusion period for the specified SLA."
      operationId: "Sla_GetExclusionPeriod"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      - name: "exclusionPeriodId"
        in: "path"
        description: "The id of the exclusion period."
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "ExclusionPeriodId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ExclusionPeriod"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist.\nor\nThe specified exclusion\
            \ period does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified SLA does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified exclusion period does not exist."
            schema:
              $ref: "#/definitions/MessageList"
    put:
      tags:
      - "SLA"
      summary: "Updates the specified exclusion period for the specified SLA."
      operationId: "Sla_PutExclusionPeriod"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      - name: "exclusionPeriodId"
        in: "path"
        description: "The id of the exclusion period."
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "ExclusionPeriodId"
      - in: "body"
        name: "exclusionPeriod"
        description: "The complete definition of the exclusion period."
        required: false
        schema:
          $ref: "#/definitions/ExclusionPeriod"
        x-nullable: true
        x-exportParamName: "ExclusionPeriod"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist.\nor\nThe specified exclusion\
            \ period does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified SLA does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified exclusion period does not exist."
            schema:
              $ref: "#/definitions/MessageList"
    delete:
      tags:
      - "SLA"
      summary: "Deletes the specified exclusion period for the specified SLA."
      operationId: "Sla_DeleteExclusionPeriod"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the sla definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      - name: "exclusionPeriodId"
        in: "path"
        description: "The id of the exclusion period."
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "ExclusionPeriodId"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist.\nor\nThe specified exclusion\
            \ period does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified SLA does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified exclusion period does not exist."
            schema:
              $ref: "#/definitions/MessageList"
    patch:
      tags:
      - "SLA"
      summary: "Partially updates the specified exclusion period for the specified\
        \ SLA."
      operationId: "Sla_PatchExclusionPeriod"
      parameters:
      - name: "slaGuid"
        in: "path"
        description: "The Guid of the SLA definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "SlaGuid"
      - name: "exclusionPeriodId"
        in: "path"
        description: "The id of the exclusion period."
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "ExclusionPeriodId"
      - in: "body"
        name: "exclusionPeriod"
        description: "The complete definition of the exclusion period."
        required: false
        schema:
          $ref: "#/definitions/ExclusionPeriod"
        x-nullable: true
        x-exportParamName: "ExclusionPeriod"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified SLA does not exist.\nor\nThe specified exclusion\
            \ period does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified SLA does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified exclusion period does not exist."
            schema:
              $ref: "#/definitions/MessageList"
  /Statistics/Monitor/{monitorGuid}:
    get:
      tags:
      - "Statistics"
      summary: "Gets the monitor statistics."
      operationId: "Statistics_GetMonitorStatistics"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "Filter"
        in: "query"
        description: "The filter for the requested response fields. E.g. \"Alerts,SlaTarget\"\
          ."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/StatisticsResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
        "404":
          description: "The monitor could not be found."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
  /Statistics/MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "Statistics"
      summary: "Gets the monitor group statistics."
      operationId: "Statistics_GetMonitorGroupStatistics"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "Filter"
        in: "query"
        description: "The filter for the requested response fields. E.g. \"Alerts,SlaTarget\"\
          ."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/StatisticsResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
        "404":
          description: "The monitor group could not be found."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
  /Alert/Monitor/{monitorGuid}:
    get:
      tags:
      - "Alert"
      summary: "Returns alerts for a specific monitor."
      operationId: "Alert_GetMonitorAlerts"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor to get alerts for."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "IncludeReminders"
        in: "query"
        description: "When true reminder alerts will be included in the results"
        required: false
        type: "boolean"
        default: false
        x-nullable: false
        x-exportParamName: "IncludeReminders"
        x-optionalDataType: "Bool"
      - name: "Cursor"
        in: "query"
        description: "A cursor value that should be used for traversing the dataset."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "Sorting"
        in: "query"
        description: "Sorting direction based on timestamp."
        required: false
        type: "string"
        default: "Descending"
        enum:
        - "Ascending"
        - "Descending"
        x-schema:
          $ref: "#/definitions/SortDirection"
        x-nullable: false
        x-exportParamName: "Sorting"
        x-optionalDataType: "String"
      - name: "Take"
        in: "query"
        description: "The number of records to return (Max value = 100)"
        required: false
        type: "integer"
        default: 100
        maximum: 100.0
        minimum: 0.0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified Monitor for monitorGuid does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Alert/MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "Alert"
      summary: "Returns alerts for a specific monitor group."
      operationId: "Alert_GetMonitorGroupAlerts"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to get alerts for."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "IncludeReminders"
        in: "query"
        description: "When true reminder alerts will be included in the results"
        required: false
        type: "boolean"
        default: false
        x-nullable: false
        x-exportParamName: "IncludeReminders"
        x-optionalDataType: "Bool"
      - name: "Cursor"
        in: "query"
        description: "A cursor value that should be used for traversing the dataset."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "Sorting"
        in: "query"
        description: "Sorting direction based on timestamp."
        required: false
        type: "string"
        default: "Descending"
        enum:
        - "Ascending"
        - "Descending"
        x-schema:
          $ref: "#/definitions/SortDirection"
        x-nullable: false
        x-exportParamName: "Sorting"
        x-optionalDataType: "String"
      - name: "Take"
        in: "query"
        description: "The number of records to return (Max value = 100)"
        required: false
        type: "integer"
        default: 100
        maximum: 100.0
        minimum: 0.0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified Monitor Group for monitorGroupGuid does not\
            \ exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Integration:
    get:
      tags:
      - "Integration"
      summary: "Gets a list of all integrations."
      operationId: "Integration_GetAllIntegrations"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Integration"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Integration/{integrationGuid}/Authorizations:
    get:
      tags:
      - "Integration"
      summary: "Get authorizations of integration"
      operationId: "Integration_GetAuthorizationsOfIntegration"
      parameters:
      - name: "integrationGuid"
        in: "path"
        description: "The intregration GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IntegrationAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested integration was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Integration"
      summary: "Create authorizations for integration\nIf the wanted authorizations\
        \ requires other authorizations, these will be added as well"
      operationId: "Integration_CreateAuthorizationForIntegration"
      parameters:
      - in: "body"
        name: "integrationAuthorization"
        description: "Authorization to add"
        required: false
        schema:
          $ref: "#/definitions/IntegrationAuthorization"
        x-nullable: true
        x-exportParamName: "IntegrationAuthorization"
      - name: "integrationGuid"
        in: "path"
        description: "The integration GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IntegrationAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested integration was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Integration/{integrationGuid}/Authorizations/{authorizationGuid}:
    delete:
      tags:
      - "Integration"
      summary: "Delete integration authorization for integration"
      operationId: "Integration_DeleteAuthorizationForIntegration"
      parameters:
      - name: "integrationGuid"
        in: "path"
        description: "The integration GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The authorization GUID that needs to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested integration or authorization was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Status/Monitor/{monitorGuid}:
    get:
      tags:
      - "Status"
      summary: "Gets all monitor status data."
      operationId: "Status_GetMonitorStatus"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorStatusResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The monitor could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Status/MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "Status"
      summary: "Gets a list of all monitor group status data."
      operationId: "Status_GetMonitorGroupStatus"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "skip"
        in: "query"
        description: "The number of monitors in the monitor group that should be skipped."
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Skip"
        x-optionalDataType: "Int32"
      - name: "take"
        in: "query"
        description: "The maximum number of monitors in the monitor group to get data\
          \ from."
        required: false
        type: "integer"
        default: 10000
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorStatusListResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The monitor group could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets a list of all alert definitions."
      operationId: "AlertDefinition_GetAllAlertDefinitions"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlertDefinition"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "AlertDefinition"
      summary: "Creates a new alert definition."
      operationId: "AlertDefinition_CreateAlertDefinition"
      parameters:
      - in: "body"
        name: "alertDefinition"
        description: "The details of the alert definition to create."
        required: false
        schema:
          $ref: "#/definitions/AlertDefinition"
        x-nullable: true
        x-exportParamName: "AlertDefinition"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinition"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets the specified alert definition."
      operationId: "AlertDefinition_GetSpecifiedAlertDefinitions"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinition"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "AlertDefinition"
      summary: "Updates the definition for the specified alert definition."
      description: "This methods only accepts a complete alert definition where all\
        \ fields are specified."
      operationId: "AlertDefinition_PutAlertDefinition"
      parameters:
      - in: "body"
        name: "alertDefinition"
        description: "The partial definition for the alert definition that should\
          \ be updated."
        required: false
        schema:
          $ref: "#/definitions/AlertDefinition"
        x-nullable: true
        x-exportParamName: "AlertDefinition"
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Deletes an existing alert definition."
      operationId: "AlertDefinition_DeleteAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "AlertDefinition"
      summary: "Partially updates the definition for the specified alert definition."
      description: "This methods accepts parts of an alert definition. Fields that\
        \ do not require changes can be omitted."
      operationId: "AlertDefinition_PatchAlertDefinition"
      parameters:
      - in: "body"
        name: "alertDefinition"
        description: "The partial definition for the alert definition that should\
          \ be updated."
        required: false
        schema:
          $ref: "#/definitions/AlertDefinition"
        x-nullable: true
        x-exportParamName: "AlertDefinition"
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/Member:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets a list of all monitor and monitor group guids for the specified\
        \ alert definition."
      operationId: "AlertDefinition_GetAllMembers"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition for which to return the members."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlertDefinitionMember"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/Member/Monitor/{monitorGuid}:
    post:
      tags:
      - "AlertDefinition"
      summary: "Adds a monitor to the specified alert definition."
      operationId: "AlertDefinition_AddMonitorToAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition to modify."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor to add."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinitionMonitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Removes a monitor for the specified alert definition."
      operationId: "AlertDefinition_RemoveMonitorFromAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition to modify."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/Member/MonitorGroup/{monitorGroupGuid}:
    post:
      tags:
      - "AlertDefinition"
      summary: "Adds a monitor group to the specified alert definition."
      operationId: "AlertDefinition_AddMonitorGroupToAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition to modify."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to add."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinitionMonitorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Removes a monitor group for the specified alert definition."
      operationId: "AlertDefinition_RemoveMonitorGroupFromAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition to modify."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets the escalation level information of the specified alert definition."
      operationId: "AlertDefinition_GetEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/EscalationLevel"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "AlertDefinition"
      summary: "Updates the escalation level for the specified alert definition."
      description: "This methods only accepts a complete alert definition where all\
        \ fields are specified."
      operationId: "AlertDefinition_PutAlertDefinitionEscalation"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The level number of the escalation that should be updated."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - in: "body"
        name: "escalationLevel"
        description: "The escalation level for the alert definition that should be\
          \ updated."
        required: false
        schema:
          $ref: "#/definitions/EscalationLevel"
        x-nullable: true
        x-exportParamName: "EscalationLevel"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "AlertDefinition"
      summary: "Partially updates the escalation level for the specified alert definition."
      description: "This methods only accepts a complete alert definition where all\
        \ fields are specified."
      operationId: "AlertDefinition_PatchAlertDefinitionEscalation"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The level number of the escalation that should be updated."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - in: "body"
        name: "escalationLevel"
        description: "The escalation level for the alert definition that should be\
          \ updated."
        required: false
        schema:
          $ref: "#/definitions/EscalationLevel"
        x-nullable: true
        x-exportParamName: "EscalationLevel"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified alert definition could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets all escalation level information for the specified alert definition."
      operationId: "AlertDefinition_GetAllEscalationLevels"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition for which to return all escalation\
          \ levels."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EscalationLevel"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets the operator and operator group guids for the specified escalation\
        \ level."
      operationId: "AlertDefinition_GetEscalationLevelOperator"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlertEscalationLevelMember"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member/Operator/{operatorGuid}:
    post:
      tags:
      - "AlertDefinition"
      summary: "Adds an operator to the specified escalation level."
      operationId: "AlertDefinition_AddOperatorToEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to add."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinitionOperator"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Removes an operator for the specified escalation level."
      operationId: "AlertDefinition_RemoveOperatorFromEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member/OperatorGroup/{operatorGroupGuid}:
    post:
      tags:
      - "AlertDefinition"
      summary: "Adds an operator group to the specified escalation level."
      operationId: "AlertDefinition_AddOperatorGroupToEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to add."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/AlertDefinitionOperatorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Removes an operator group for the specified escalation level."
      operationId: "AlertDefinition_RemoveOperatorGroupFromEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Integration:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets all integrations for a specified escalation level."
      operationId: "AlertDefinition_GetAllEscalationLevelIntegrations"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Integration"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "AlertDefinition"
      summary: "Adds an integration to a specified escalation level."
      operationId: "AlertDefinition_AddIntegrationToEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - in: "body"
        name: "escalationLevelIntegration"
        description: "The integration to add."
        required: false
        schema:
          $ref: "#/definitions/EscalationLevelIntegration"
        x-nullable: true
        x-exportParamName: "EscalationLevelIntegration"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Integration"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Integration/{integrationGuid}:
    get:
      tags:
      - "AlertDefinition"
      summary: "Gets a single integration for a specified escalation level."
      operationId: "AlertDefinition_GetEscalationLevelIntegration"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "integrationGuid"
        in: "path"
        description: "The Guid of the integration."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Integration"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "AlertDefinition"
      summary: "Updates an integration for a specified escalation level."
      operationId: "AlertDefinition_UpdateIntegrationForEscalationWithPut"
      parameters:
      - in: "body"
        name: "escalationLevelIntegration"
        description: "The definition for the integration that should be updated."
        required: false
        schema:
          $ref: "#/definitions/EscalationLevelIntegration"
        x-nullable: true
        x-exportParamName: "EscalationLevelIntegration"
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "integrationGuid"
        in: "path"
        description: "The Guid of the integration to update."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned"
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "AlertDefinition"
      summary: "Removes an integration from a specified escalation level."
      operationId: "AlertDefinition_RemoveIntegrationFromEscalationLevel"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "integrationGuid"
        in: "path"
        description: "The Guid of the integration to remove."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "AlertDefinition"
      summary: "Partially updates an integration for a specified escalation level."
      operationId: "AlertDefinition_UpdateIntegrationForEscalationWithPatch"
      parameters:
      - in: "body"
        name: "escalationLevelIntegration"
        description: "The partial definition for the integration that should be updated."
        required: false
        schema:
          $ref: "#/definitions/EscalationLevelIntegration"
        x-nullable: true
        x-exportParamName: "EscalationLevelIntegration"
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The Guid of the alert definition."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "escalationLevelId"
        in: "path"
        description: "The escalation level id."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "EscalationLevelId"
      - name: "integrationGuid"
        in: "path"
        description: "The Guid of the integration to update."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "IntegrationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "One or more of the specified entities could not be found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/Authorizations:
    get:
      tags:
      - "AlertDefinition"
      summary: "Get authorizations of alert definition"
      operationId: "AlertDefinition_GetAuthorizationsOfAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The alert definition GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlertDefinitionAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested alert definition was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "AlertDefinition"
      summary: "Create authorizations for alert definition\nIf the wanted authorizations\
        \ requires other authorizations, these will be added as well"
      operationId: "AlertDefinition_CreateAuthorizationForAlertDefinition"
      parameters:
      - in: "body"
        name: "alertDefinitionAuthorization"
        description: "Authorization to add"
        required: false
        schema:
          $ref: "#/definitions/AlertDefinitionAuthorization"
        x-nullable: true
        x-exportParamName: "AlertDefinitionAuthorization"
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The alert definition GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AlertDefinitionAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested alert definition was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /AlertDefinition/{alertDefinitionGuid}/Authorizations/{authorizationGuid}:
    delete:
      tags:
      - "AlertDefinition"
      summary: "Delete alert definition authorization for alert definition"
      operationId: "AlertDefinition_DeleteAuthorizationForAlertDefinition"
      parameters:
      - name: "alertDefinitionGuid"
        in: "path"
        description: "The alert definition GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AlertDefinitionGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The authorization GUID that needs to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested alert definition or authorization was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Checkpoint:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns all the checkpoints that are not deleted"
      operationId: "Checkpoint_GetAllCheckpoints"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpointListResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Checkpoint/{checkpointId}:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the specified checkpoint, deleted or not"
      operationId: "Checkpoint_GetCheckpoint"
      parameters:
      - name: "checkpointId"
        in: "path"
        description: "The Id of the requested checkpoint."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "CheckpointId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpointResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified checkpoint doesn't exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Checkpoint/Server/{serverId}:
    get:
      tags:
      - "Checkpoint"
      summary: "Returns the requested checkpoint server."
      operationId: "CheckpointServer_GetServer"
      parameters:
      - name: "serverId"
        in: "path"
        description: "The Id of the requested server."
        required: true
        type: "integer"
        x-nullable: false
        x-exportParamName: "ServerId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/CheckpoinServerResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Checkpoint/Server/Ipv4:
    get:
      tags:
      - "Checkpoint"
      summary: "Anonymous call that returns all the IPv4 addresses of all the checkpoint\
        \ servers."
      operationId: "CheckpointServer_GetAllServerIpv4Addresses"
      parameters: []
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ListStringResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Checkpoint/Server/Ipv6:
    get:
      tags:
      - "Checkpoint"
      summary: "Anonymous call that returns all the IPv6 addresses of all the checkpoint\
        \ servers."
      operationId: "CheckpointServer_GetAllServerIpv6Addresses"
      parameters: []
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ListStringResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup:
    get:
      tags:
      - "MonitorGroup"
      summary: "Gets all monitor groups"
      operationId: "MonitorGroup_GetAllMonitorGroups"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "MonitorGroup"
      summary: "Creates a new monitor group"
      operationId: "MonitorGroup_CreateMonitorGroup"
      parameters:
      - in: "body"
        name: "monitorGroup"
        description: "The MonitorGroup object to be created"
        required: false
        schema:
          $ref: "#/definitions/MonitorGroup"
        x-nullable: true
        x-exportParamName: "MonitorGroup"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "MonitorGroup"
      summary: "Gets the details of a monitor group"
      operationId: "MonitorGroup_GetMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to be retrieved"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "MonitorGroup"
      summary: "Updates the monitor group with the Guid specified"
      operationId: "MonitorGroup_UpdateMonitorGroup"
      parameters:
      - in: "body"
        name: "monitorGroup"
        description: "The monitor group to be updated"
        required: false
        schema:
          $ref: "#/definitions/MonitorGroup"
        x-nullable: true
        x-exportParamName: "MonitorGroup"
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to be updated"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nThe All Monitors group cannot be\
            \ changed or deleted.\nor\nThe All Monitors group already exists."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The All Monitors group cannot be changed or deleted."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The All Monitors group already exists."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "MonitorGroup"
      summary: "Deletes the specified monitor group"
      operationId: "MonitorGroup_DeleteMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nDeleting the AllMonitors group is\
            \ not allowed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "Deleting the AllMonitors group is not allowed."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/Member:
    get:
      tags:
      - "MonitorGroup"
      summary: "Gets a list of all members of a monitor group"
      operationId: "MonitorGroup_GetMonitorGroupMembers"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to retrieve the members for"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorGroupMember"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/AddMaintenancePeriodToAllMembers:
    post:
      tags:
      - "MonitorGroup"
      summary: "Adds the provided maintenance period to all monitors in the group\
        \ specified"
      operationId: "MonitorGroup_AddMaintenancePeriodToAllMembers"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - in: "body"
        name: "maintenancePeriod"
        required: false
        schema:
          $ref: "#/definitions/MaintenancePeriod"
        x-nullable: true
        x-exportParamName: "MaintenancePeriod"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/Member/{monitorGuid}:
    post:
      tags:
      - "MonitorGroup"
      summary: "Adds the specified monitor to the monitor group"
      operationId: "MonitorGroup_AddMonitorToMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to add the monitor to"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "monitorGuid"
        in: "path"
        description: "The monitor Guid"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "MonitorGroup"
      summary: "Removes the specified monitor from the monitor group"
      operationId: "MonitorGroup_RemoveMonitorFromMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to remove the monitor from"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "monitorGuid"
        in: "path"
        description: "The monitor Guid to be removed"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nA monitor cannot be removed from\
            \ the All Monitors group."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "A monitor cannot be removed from the All Monitors group."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/StopAllMonitors:
    post:
      tags:
      - "MonitorGroup"
      summary: "Stops all monitors that are a member of the monitor group specified\
        \ by the monitor group GUID"
      operationId: "MonitorGroup_StopAllMonitorsInGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/StartAllMonitors:
    post:
      tags:
      - "MonitorGroup"
      summary: "Starts all monitors that are a member of the monitor group specified\
        \ by the monitor group GUID"
      operationId: "MonitorGroup_StartAllMonitorsInGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts:
    post:
      tags:
      - "MonitorGroup"
      summary: "Stops alerting for all monitors that are a member of the monitor group\
        \ specified by the monitor group GUID"
      operationId: "MonitorGroup_StopAllMonitorAlertsInGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts:
    post:
      tags:
      - "MonitorGroup"
      summary: "Starts alerting for all monitors that are a member of the monitor\
        \ group specified by the monitor group GUID"
      operationId: "MonitorGroup_StartAllMonitorAlertsInGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/Authorizations:
    get:
      tags:
      - "MonitorGroup"
      summary: "Get monitor authorizations of monitor group"
      operationId: "MonitorGroup_GetAuthorizationsOfMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitorGroupAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "MonitorGroup"
      summary: "Create monitor authorizations for monitor group\nIf the wanted authorizations\
        \ requires other authorizations, these will be added as well"
      operationId: "MonitorGroup_CreateAuthorizationForMonitorGroup"
      parameters:
      - in: "body"
        name: "monitorGroupAuthorization"
        description: "Authorization to add"
        required: false
        schema:
          $ref: "#/definitions/MonitorGroupAuthorization"
        x-nullable: true
        x-exportParamName: "MonitorGroupAuthorization"
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitorGroupAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorGroup/{monitorGroupGuid}/Authorizations/{authorizationGuid}:
    delete:
      tags:
      - "MonitorGroup"
      summary: "Delete monitor authorization for monitor group"
      operationId: "MonitorGroup_DeleteAuthorizationForMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The monitor group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The authorization GUID that needs to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor group or authorization was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator:
    get:
      tags:
      - "Operator"
      summary: "Gets a list of all operators."
      operationId: "Operator_GetAllOperators"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Operator"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Operator"
      summary: "Creates a new operator."
      operationId: "Operator_CreateOperator"
      parameters:
      - in: "body"
        name: "uptrendsOperator"
        description: "The details of the operator to create"
        required: false
        schema:
          $ref: "#/definitions/Operator"
        x-nullable: true
        x-exportParamName: "UptrendsOperator"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Operator"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}:
    get:
      tags:
      - "Operator"
      summary: "Gets the details of the operator with the provided OperatorGuid."
      operationId: "Operator_GetOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator for which to retrieve the details"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Operator"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "Operator"
      summary: "Updates an existing operator."
      operationId: "Operator_UpdateOperator"
      parameters:
      - in: "body"
        name: "uptrendsOperator"
        description: "The updated details of the operator"
        required: false
        schema:
          $ref: "#/definitions/Operator"
        x-nullable: true
        x-exportParamName: "UptrendsOperator"
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to update"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Operator"
      summary: "Deletes an existing operator."
      operationId: "Operator_DeleteOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to delete"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "Deleting the current operator is not allowed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "Operator"
      summary: "Updates an existing operator."
      operationId: "Operator_UpdateOperatorWithPatch"
      parameters:
      - in: "body"
        name: "uptrendsOperator"
        description: "The updated details of the operator"
        required: false
        schema:
          $ref: "#/definitions/Operator"
        x-nullable: true
        x-exportParamName: "UptrendsOperator"
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to update"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}/OperatorGroup:
    get:
      tags:
      - "Operator"
      summary: "Gets a list of all operator groups for the specified operator."
      operationId: "Operator_GetOperatorGroupsForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator for which to retrieve the operator\
          \ group guids"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OperatorMember"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}/Authorization:
    get:
      tags:
      - "Operator"
      summary: "Gets all authorizations for the specified operator."
      operationId: "Operator_GetAuthorizationsForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OperatorAuthorizationType"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}/Authorization/{authorizationType}:
    post:
      tags:
      - "Operator"
      summary: "Assigns the specified authorization to this operator."
      operationId: "Operator_PostAuthorizationForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      - name: "authorizationType"
        in: "path"
        description: "The type of authorization"
        required: true
        type: "string"
        enum:
        - "AccountAccess"
        - "AccountAdministrator"
        - "AllowInfra"
        - "FinancialOperator"
        - "TechnicalContact"
        - "ShareDashboards"
        - "CreateAlertDefinition"
        - "CreateIntegration"
        x-schema:
          $ref: "#/definitions/OperatorAuthorizationType"
        x-nullable: false
        x-exportParamName: "AuthorizationType"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Operator"
      summary: "Removes the specified authorization of this operator."
      operationId: "Operator_DeleteAuthorizationForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      - name: "authorizationType"
        in: "path"
        description: "The type of authorization"
        required: true
        type: "string"
        enum:
        - "AccountAccess"
        - "AccountAdministrator"
        - "AllowInfra"
        - "FinancialOperator"
        - "TechnicalContact"
        - "ShareDashboards"
        - "CreateAlertDefinition"
        - "CreateIntegration"
        x-schema:
          $ref: "#/definitions/OperatorAuthorizationType"
        x-nullable: false
        x-exportParamName: "AuthorizationType"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}/DutySchedule:
    get:
      tags:
      - "Operator"
      summary: "Gets the duty schedules for an specified operator."
      operationId: "Operator_GetDutyScheduleForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to get the duty schedule for"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OperatorDutySchedule"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Operator"
      summary: "Adds a duty schedule to the specified operator."
      operationId: "Operator_AddDutyPeriodForOperator"
      parameters:
      - in: "body"
        name: "schedule"
        description: "The duty schedule to add"
        required: false
        schema:
          $ref: "#/definitions/OperatorDutySchedule"
        x-nullable: true
        x-exportParamName: "Schedule"
      - name: "operatorGuid"
        in: "path"
        description: "The Guid of the operator to add the duty schedule to"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "403":
          description: "One or more validation errors occurred."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Operator/{operatorGuid}/DutySchedule/{dutyScheduleId}:
    put:
      tags:
      - "Operator"
      summary: "Updates the specified duty schedule of the specified operator."
      operationId: "Operator_UpdateDutyPeriodForOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      - name: "dutyScheduleId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "DutyScheduleId"
      - in: "body"
        name: "schedule"
        required: false
        schema:
          $ref: "#/definitions/OperatorDutySchedule"
        x-nullable: true
        x-exportParamName: "Schedule"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator or duty schedule does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Operator"
      summary: "Deletes the specified duty schedule of the specified operator."
      operationId: "Operator_DeleteDutyScheduleFromOperator"
      parameters:
      - name: "operatorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      - name: "dutyScheduleId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "DutyScheduleId"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator or duty schedule item does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OutgoingPhoneNumber:
    get:
      tags:
      - "OutgoingPhoneNumber"
      summary: "Gets a list of all outgoing phone numbers available."
      operationId: "OutgoingPhoneNumber_GetAllOutgoingPhoneNumbers"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OutgoingPhoneNumberDetails"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup:
    get:
      tags:
      - "OperatorGroup"
      summary: "Gets all operator groups"
      operationId: "OperatorGroup_GetAllOperatorGroups"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OperatorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "OperatorGroup"
      summary: "Creates a new operator group"
      operationId: "OperatorGroup_CreateOperatorGroup"
      parameters:
      - in: "body"
        name: "operatorGroup"
        description: "The operatorGroup object to be created"
        required: false
        schema:
          $ref: "#/definitions/OperatorGroup"
        x-nullable: true
        x-exportParamName: "OperatorGroup"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/OperatorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}:
    get:
      tags:
      - "OperatorGroup"
      summary: "Gets the details of a operator group"
      operationId: "OperatorGroup_GetOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to be retrieved"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/OperatorGroup"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "OperatorGroup"
      summary: "Updates the operator group with the Guid specified"
      operationId: "OperatorGroup_UpdateOperatorGroup"
      parameters:
      - in: "body"
        name: "operatorGroup"
        description: "The operator group to be updated"
        required: false
        schema:
          $ref: "#/definitions/OperatorGroup"
        x-nullable: true
        x-exportParamName: "OperatorGroup"
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to be updated"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nThe All operators group cannot be\
            \ changed or deleted.\nor\nThe All operators group already exists."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The All operators group cannot be changed or deleted."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The All operators group already exists."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "OperatorGroup"
      summary: "Deletes the specified operator group"
      operationId: "OperatorGroup_DeleteOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nDeleting the Alloperators group is\
            \ not allowed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "Deleting the Alloperators group is not allowed."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/Member:
    get:
      tags:
      - "OperatorGroup"
      summary: "Gets a list of all members of an operator group"
      operationId: "OperatorGroup_GetOperatorGroupMembers"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to retrieve the members for"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/OperatorGroupMember"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/DutySchedule/AddDutyScheduleForAllMembers:
    post:
      tags:
      - "OperatorGroup"
      summary: "Adds the provided duty schedule to all operators in the group specified"
      operationId: "OperatorGroup_AddDutyScheduleToAllMembers"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      - in: "body"
        name: "dutySchedule"
        required: false
        schema:
          $ref: "#/definitions/OperatorDutySchedule"
        x-nullable: true
        x-exportParamName: "DutySchedule"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/Member/{operatorGuid}:
    post:
      tags:
      - "OperatorGroup"
      summary: "Adds the specified operator to the operator group"
      operationId: "OperatorGroup_AddOperatorToOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to add the operator to"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      - name: "operatorGuid"
        in: "path"
        description: "The operator Guid"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "OperatorGroup"
      summary: "Removes the specified operator from the operator group"
      operationId: "OperatorGroup_RemoveOperatorFromOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group to remove the operator from"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      - name: "operatorGuid"
        in: "path"
        description: "The operator Guid to be removed"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed.\nor\nA operator cannot be removed from\
            \ the All operators group."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The request failed."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "A operator cannot be removed from the All operators group."
            schema:
              $ref: "#/definitions/MessageList"
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/AllOperatorsOnDuty:
    post:
      tags:
      - "OperatorGroup"
      summary: "Set the OnDuty flag to on for all operators that are a member of the\
        \ operator group specified by the operator group GUID"
      operationId: "OperatorGroup_AllOperatorsInGroupOnDuty"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The operator group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/AllOperatorsOffDuty:
    post:
      tags:
      - "OperatorGroup"
      summary: "Set the OnDuty flag to off for all operators that are a member of\
        \ the operator group specified by the operator group GUID"
      operationId: "OperatorGroup_AllOperatorsInGroupOffDuty"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The operator group GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
        "404":
          description: "The requested operator group was not found."
          schema:
            $ref: "#/definitions/MessageInfo"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/Authorization:
    get:
      tags:
      - "OperatorGroup"
      summary: "Gets all authorizations for the specified operator group."
      operationId: "OperatorGroup_GetAuthorizationsForOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OperatorGroupAuthorizationType"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /OperatorGroup/{operatorGroupGuid}/Authorization/{authorizationType}:
    post:
      tags:
      - "OperatorGroup"
      summary: "Assigns the specified authorization to the operator group."
      operationId: "OperatorGroup_PostAuthorizationForOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      - name: "authorizationType"
        in: "path"
        description: "The type of authorization"
        required: true
        type: "string"
        enum:
        - "ShareDashboards"
        - "AllowInfra"
        - "Administrator"
        - "TechnicalContact"
        - "FinancialOperator"
        - "BasicOperator"
        - "CreateAlertDefinition"
        - "CreateIntegration"
        x-schema:
          $ref: "#/definitions/OperatorGroupAuthorizationType"
        x-nullable: false
        x-exportParamName: "AuthorizationType"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator group was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "OperatorGroup"
      summary: "Removes the specified authorization of the operator group."
      operationId: "OperatorGroup_DeleteAuthorizationForOperatorGroup"
      parameters:
      - name: "operatorGroupGuid"
        in: "path"
        description: "The Guid of the operator group"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "OperatorGroupGuid"
      - name: "authorizationType"
        in: "path"
        description: "The type of authorization"
        required: true
        type: "string"
        enum:
        - "ShareDashboards"
        - "AllowInfra"
        - "Administrator"
        - "TechnicalContact"
        - "FinancialOperator"
        - "BasicOperator"
        - "CreateAlertDefinition"
        - "CreateIntegration"
        x-schema:
          $ref: "#/definitions/OperatorGroupAuthorizationType"
        x-nullable: false
        x-exportParamName: "AuthorizationType"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified operator group was not found.\nor\nThe specified\
            \ operator group authorization was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The specified operator group was not found."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The specified operator group authorization was not found."
            schema:
              $ref: "#/definitions/MessageList"
  /MonitorCheck:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns all monitor check data."
      operationId: "MonitorCheck_GetAccountMonitorChecks"
      parameters:
      - name: "ErrorLevel"
        in: "query"
        description: "Error level filter that should be applied. (default = NoError\
          \ and above)"
        required: false
        type: "string"
        enum:
        - "NoError"
        - "Unconfirmed"
        - "Confirmed"
        x-schema:
          $ref: "#/definitions/ErrorLevelFilter"
        x-nullable: false
        x-exportParamName: "ErrorLevel"
        x-optionalDataType: "String"
      - name: "ShowPartialMeasurements"
        in: "query"
        description: "Show partial measurements from concurrent monitors"
        required: false
        type: "boolean"
        x-nullable: false
        x-exportParamName: "ShowPartialMeasurements"
        x-optionalDataType: "Bool"
      - name: "Cursor"
        in: "query"
        description: "A cursor value that should be used for traversing the dataset."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "Sorting"
        in: "query"
        description: "Sorting direction based on timestamp."
        required: false
        type: "string"
        default: "Descending"
        enum:
        - "Ascending"
        - "Descending"
        x-schema:
          $ref: "#/definitions/SortDirection"
        x-nullable: false
        x-exportParamName: "Sorting"
        x-optionalDataType: "String"
      - name: "Take"
        in: "query"
        description: "The number of records to return (Max value = 100)"
        required: false
        type: "integer"
        default: 100
        maximum: 100.0
        minimum: 0.0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorCheckResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns a single monitor check."
      operationId: "MonitorCheck_GetSingleMonitorCheck"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The Id of the monitor check to get the data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/SingleMonitorCheckResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/Monitor/{monitorGuid}:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns monitor check data for a specific monitor."
      operationId: "MonitorCheck_GetMonitorCheck"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor to get monitor checks for."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "ErrorLevel"
        in: "query"
        description: "Error level filter that should be applied. (default = NoError\
          \ and above)"
        required: false
        type: "string"
        enum:
        - "NoError"
        - "Unconfirmed"
        - "Confirmed"
        x-schema:
          $ref: "#/definitions/ErrorLevelFilter"
        x-nullable: false
        x-exportParamName: "ErrorLevel"
        x-optionalDataType: "String"
      - name: "ShowPartialMeasurements"
        in: "query"
        description: "Show partial measurements from concurrent monitors"
        required: false
        type: "boolean"
        x-nullable: false
        x-exportParamName: "ShowPartialMeasurements"
        x-optionalDataType: "Bool"
      - name: "Cursor"
        in: "query"
        description: "A cursor value that should be used for traversing the dataset."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "Sorting"
        in: "query"
        description: "Sorting direction based on timestamp."
        required: false
        type: "string"
        default: "Descending"
        enum:
        - "Ascending"
        - "Descending"
        x-schema:
          $ref: "#/definitions/SortDirection"
        x-nullable: false
        x-exportParamName: "Sorting"
        x-optionalDataType: "String"
      - name: "Take"
        in: "query"
        description: "The number of records to return (Max value = 100)"
        required: false
        type: "integer"
        default: 100
        maximum: 100.0
        minimum: 0.0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorCheckResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns monitor check data for a specific monitor group."
      operationId: "MonitorCheck_GetMonitorGroupData"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the monitor group to get monitor checks for."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "ErrorLevel"
        in: "query"
        description: "Error level filter that should be applied. (default = NoError\
          \ and above)"
        required: false
        type: "string"
        enum:
        - "NoError"
        - "Unconfirmed"
        - "Confirmed"
        x-schema:
          $ref: "#/definitions/ErrorLevelFilter"
        x-nullable: false
        x-exportParamName: "ErrorLevel"
        x-optionalDataType: "String"
      - name: "ShowPartialMeasurements"
        in: "query"
        description: "Show partial measurements from concurrent monitors"
        required: false
        type: "boolean"
        x-nullable: false
        x-exportParamName: "ShowPartialMeasurements"
        x-optionalDataType: "Bool"
      - name: "Cursor"
        in: "query"
        description: "A cursor value that should be used for traversing the dataset."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Cursor"
        x-optionalDataType: "String"
      - name: "Sorting"
        in: "query"
        description: "Sorting direction based on timestamp."
        required: false
        type: "string"
        default: "Descending"
        enum:
        - "Ascending"
        - "Descending"
        x-schema:
          $ref: "#/definitions/SortDirection"
        x-nullable: false
        x-exportParamName: "Sorting"
        x-optionalDataType: "String"
      - name: "Take"
        in: "query"
        description: "The number of records to return (Max value = 100)"
        required: false
        type: "integer"
        default: 100
        maximum: 100.0
        minimum: 0.0
        format: "int32"
        x-nullable: false
        x-exportParamName: "Take"
        x-optionalDataType: "Int32"
      - name: "Start"
        in: "query"
        description: "The start of a custom period (can't be used together with the\
          \ PresetPeriod parameter)"
        required: false
        x-nullable: true
        x-exportParamName: "Start"
      - name: "End"
        in: "query"
        description: "The end of a custom period"
        required: false
        x-nullable: true
        x-exportParamName: "End"
      - name: "PresetPeriod"
        in: "query"
        description: "The requested time period."
        required: false
        type: "string"
        default: "Last24Hours"
        enum:
        - "CurrentDay"
        - "CurrentWeek"
        - "CurrentMonth"
        - "CurrentQuarter"
        - "CurrentYear"
        - "PreviousDay"
        - "PreviousWeek"
        - "PreviousMonth"
        - "PreviousQuarter"
        - "PreviousYear"
        - "Last2Hours"
        - "Last6Hours"
        - "Last12Hours"
        - "Last24Hours"
        - "Last48Hours"
        - "Last7Days"
        - "Last30Days"
        - "Last60Days"
        - "Last90Days"
        - "Last365Days"
        - "Last3Months"
        - "Last6Months"
        - "Last12Months"
        - "Last24Months"
        - "All"
        x-schema:
          $ref: "#/definitions/PresetPeriodType"
        x-nullable: true
        x-exportParamName: "PresetPeriod"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorCheckResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/Http:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns HTTP details for a monitor check."
      operationId: "MonitorCheck_GetHttpDetails"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/HttpDetailsResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/MultiStepAPI:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns Multi-Step API details for a monitor check."
      operationId: "MonitorCheck_GetMultistepDetails"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MsaDetailsResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/Transaction:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns transaction step details for a monitor check."
      operationId: "MonitorCheck_GetTransactionDetails"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/TransactionDetailsResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/Waterfall:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns waterfall information for a monitor check."
      operationId: "MonitorCheck_GetWaterfallInfo"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      - name: "step"
        in: "query"
        description: "For transaction waterfalls only: the transaction step to get\
          \ the waterfall for."
        required: false
        type: "integer"
        format: "int32"
        x-nullable: true
        x-exportParamName: "Step"
        x-optionalDataType: "Int32"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/WaterfallResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/PageSource:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns page source information for a monitor check."
      operationId: "MonitorCheck_GetPageSourceInfo"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      - name: "step"
        in: "query"
        description: "For transactions only: the transaction step to get the page\
          \ source for."
        required: false
        type: "integer"
        format: "int32"
        x-nullable: true
        x-exportParamName: "Step"
        x-optionalDataType: "Int32"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/WaterfallResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/ConsoleLog:
    get:
      tags:
      - "MonitorCheck"
      summary: "Returns console log information for a monitor check."
      operationId: "MonitorCheck_GetConsoleLogInfo"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the detailed data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      - name: "step"
        in: "query"
        description: "For transactions only: the transaction step to get the console\
          \ log for."
        required: false
        type: "integer"
        format: "int32"
        x-nullable: true
        x-exportParamName: "Step"
        x-optionalDataType: "Int32"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/WaterfallResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/Screenshot/{screenshotId}:
    get:
      tags:
      - "MonitorCheck"
      summary: "Gets a specific screenshot for a specified monitor check"
      operationId: "MonitorCheck_GetScreenshots"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the screenshot data for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      - name: "screenshotId"
        in: "path"
        description: "The screenshot Id of the screenshot to get."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "ScreenshotId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/ScreenshotResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /MonitorCheck/{monitorCheckId}/Concurrent:
    get:
      tags:
      - "MonitorCheck"
      summary: "Gets all partial checks for a concurrent monitor check"
      operationId: "MonitorCheck_GetConcurrentMonitorPartialChecks"
      parameters:
      - name: "monitorCheckId"
        in: "path"
        description: "The monitor check Id to get the partial checks for."
        required: true
        type: "integer"
        format: "int64"
        x-nullable: false
        x-exportParamName: "MonitorCheckId"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/MonitorCheckResponse"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor:
    get:
      tags:
      - "Monitor"
      summary: "Returns the definition of all monitors available in the account."
      operationId: "Monitor_GetMonitors"
      parameters:
      - name: "filter"
        in: "query"
        description: "Provide the option to only retrieve the requested fields. E.g.\
          \ \"Name,IsActive\"."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Monitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Monitor"
      summary: "Creates a new monitor."
      operationId: "Monitor_PostMonitor"
      parameters:
      - in: "body"
        name: "monitor"
        description: "The complete definition of the monitor that should be created."
        required: false
        schema:
          $ref: "#/definitions/Monitor"
        x-nullable: true
        x-exportParamName: "Monitor"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Monitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/MonitorGroup/{monitorGroupGuid}:
    get:
      tags:
      - "Monitor"
      summary: "Returns the definition of all monitors available in the account that\
        \ are a member of the specified monitor group."
      operationId: "Monitor_GetMonitorsByMonitorGroup"
      parameters:
      - name: "monitorGroupGuid"
        in: "path"
        description: "The Guid of the requested monitor group to retrieve the monitors\
          \ of."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGroupGuid"
      - name: "filter"
        in: "query"
        description: "Provide the option to only retrieve the requested fields. E.g.\
          \ \"Name,IsActive\"."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Monitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}:
    get:
      tags:
      - "Monitor"
      summary: "Returns the definition of the specified monitor."
      operationId: "Monitor_GetMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the requested monitor."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "filter"
        in: "query"
        description: "Provide the option to only retrieve the requested fields. E.g.\
          \ \"Name,IsActive\"."
        required: false
        type: "string"
        x-nullable: true
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Monitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "Monitor"
      summary: "Updates the definition of the specified monitor."
      description: "This methods only accepts a complete monitor definition. We recommend\
        \ retrieving the existing definition first (using the GET method). You can\
        \ then process the changes you want to make and send back the updated definition\
        \ using this PUT method."
      operationId: "Monitor_PutMonitor"
      parameters:
      - in: "body"
        name: "monitor"
        description: "The complete definition for the monitor that should be updated."
        required: false
        schema:
          $ref: "#/definitions/Monitor"
        x-nullable: true
        x-exportParamName: "Monitor"
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Monitor"
      summary: "Deletes the specified monitor."
      operationId: "Monitor_DeleteMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The guid of the monitor you want to delete."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "Monitor"
      summary: "Partially updates the definition of the specified monitor."
      description: "This methods accepts parts of a monitor definition. We recommend\
        \ retrieving the existing definition first (using the GET method). You can\
        \ then process the changes you want to make and send back these changes only\
        \ using this PATCH method."
      operationId: "Monitor_PatchMonitor"
      parameters:
      - in: "body"
        name: "monitor"
        description: "The partial definition for the monitor that should be updated."
        required: false
        schema:
          $ref: "#/definitions/Monitor"
        x-nullable: true
        x-exportParamName: "Monitor"
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the monitor that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request was successful. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/MonitorGroup:
    get:
      tags:
      - "Monitor"
      summary: "Returns the Guid of each monitor group where the specified monitor\
        \ is a member of."
      operationId: "Monitor_GetMonitorGroups"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The Guid of the requested monitor."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              type: "string"
              format: "guid"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/Clone:
    post:
      tags:
      - "Monitor"
      summary: "Creates a clone (duplicate) of the specified monitor."
      description: "Upon creation, the new monitor will be inactive. This allows you\
        \ to make the necessary changes before you activate it. All other settings\
        \ will be transferred to the new monitor as-is."
      operationId: "Monitor_CloneMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The guid of the monitor you want to clone."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "includeMaintenancePeriods"
        in: "query"
        description: "Whether or not to also copy the maintenance periods into the\
          \ clone."
        required: false
        type: "boolean"
        default: true
        x-nullable: false
        x-exportParamName: "IncludeMaintenancePeriods"
        x-optionalDataType: "Bool"
      - name: "includeMonitorGroups"
        in: "query"
        description: "Whether or not to also copy the monitor group memberships into\
          \ the clone."
        required: false
        type: "boolean"
        default: true
        x-nullable: false
        x-exportParamName: "IncludeMonitorGroups"
        x-optionalDataType: "Bool"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/Monitor"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/MaintenancePeriod:
    get:
      tags:
      - "Monitor"
      summary: "Finds all maintenance periods for a monitor."
      operationId: "Monitor_GetAllMaintenancePeriodsForMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The guid of the monitor you want to find the maintenance periods\
          \ of."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MaintenancePeriod"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Monitor"
      summary: "Saves the new maintenance period provided for the specified monitor"
      operationId: "Monitor_CreateMaintenancePeriodForMonitor"
      parameters:
      - in: "body"
        name: "maintenancePeriod"
        required: false
        schema:
          $ref: "#/definitions/MaintenancePeriod"
        x-nullable: true
        x-exportParamName: "MaintenancePeriod"
      - name: "monitorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully. No content is returned."
          schema:
            $ref: "#/definitions/MaintenancePeriod"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}:
    put:
      tags:
      - "Monitor"
      summary: "Updates the specified maintenance schedule for the specified monitor"
      operationId: "Monitor_UpdateMaintenancePeriodForMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "maintenancePeriodId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "MaintenancePeriodId"
      - in: "body"
        name: "maintenancePeriod"
        required: false
        schema:
          $ref: "#/definitions/MaintenancePeriod"
        x-nullable: true
        x-exportParamName: "MaintenancePeriod"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor or maintenanceperiod does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Monitor"
      summary: "Deletes the specified maintenance period from the specified monitor"
      operationId: "Monitor_DeleteMaintenancePeriodFromMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "maintenancePeriodId"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
        x-nullable: false
        x-exportParamName: "MaintenancePeriodId"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor or maintenance period does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}:
    post:
      tags:
      - "Monitor"
      summary: "Clears out all one-time maintenance periods for the specified monitor\
        \ older than the specified date"
      operationId: "Monitor_CleanupMaintenancePeriods"
      parameters:
      - name: "monitorGuid"
        in: "path"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "beforeDate"
        in: "path"
        description: "A string representing the date, formatted as \"yyyy-MM-dd\""
        required: true
        x-nullable: false
        x-exportParamName: "BeforeDate"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The specified monitor does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/Authorizations:
    get:
      tags:
      - "Monitor"
      summary: "Get monitor authorizations of monitor"
      operationId: "Monitor_GetAuthorizationsOfMonitor"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The monitor GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitorAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Monitor"
      summary: "Create monitor authorizations for monitor\nIf the wanted authorizations\
        \ requires other authorizations, these will be added as well"
      operationId: "Monitor_CreateAuthorizationForMonitor"
      parameters:
      - in: "body"
        name: "monitorAuthorization"
        description: "Authorization to add"
        required: false
        schema:
          $ref: "#/definitions/MonitorAuthorization"
        x-nullable: true
        x-exportParamName: "MonitorAuthorization"
      - name: "monitorGuid"
        in: "path"
        description: "The monitor GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitorAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Monitor/{monitorGuid}/Authorizations/{authorizationGuid}:
    delete:
      tags:
      - "Monitor"
      summary: "Delete monitor authorization for monitor"
      operationId: "Monitor_DeleteAuthorizationForMonitorGroup"
      parameters:
      - name: "monitorGuid"
        in: "path"
        description: "The monitor GUID"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "MonitorGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The authorization GUID that needs to be deleted"
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested monitor or authorization was not found."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /Register:
    post:
      tags:
      - "Register"
      summary: "Creates a new API account."
      description: "This method requires that you specify the username and password\
        \ of an Uptrends operator login as authentication. When registration is successful,\
        \ please save the UserName and Password fields from the response; these are\
        \ your new API credentials."
      operationId: "Register_Post"
      parameters:
      - name: "description"
        in: "query"
        description: "An optional description for the new API account, e.g. \"API\"\
          . If this is empty, it will be defaulted to \"API\""
        required: false
        type: "string"
        default: "API"
        x-nullable: true
        x-exportParamName: "Description"
        x-optionalDataType: "String"
      - name: "operatorGuid"
        in: "query"
        description: "The operator guid for which the new API account needs to be\
          \ created. Leave empty to create an API acount for your own operator."
        required: false
        type: "string"
        format: "guid"
        x-nullable: true
        x-exportParamName: "OperatorGuid"
        x-optionalDataType: "String"
      security:
      - user-basicauth:
        - ""
      responses:
        "201":
          description: "If you get this response, a new API account was created successfully."
          schema:
            $ref: "#/definitions/RegistrationResponse"
          x-nullable: false
  /VaultItem:
    get:
      tags:
      - "Vault"
      summary: "Returns all vault items."
      operationId: "Vault_GetAllVaultItems"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VaultItem"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Vault"
      summary: "Creates a new vault item."
      description: "The VaultItemGuid field should be omitted"
      operationId: "Vault_CreateNewVaultItem"
      parameters:
      - in: "body"
        name: "item"
        description: "The item to create"
        required: false
        schema:
          $ref: "#/definitions/VaultItem"
        x-nullable: true
        x-exportParamName: "Item"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultItem"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /VaultItem/{vaultItemGuid}:
    get:
      tags:
      - "Vault"
      summary: "Returns the specified vault item."
      operationId: "Vault_GetVaultItem"
      parameters:
      - name: "vaultItemGuid"
        in: "path"
        description: "The Guid of the requested vault item."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultItemGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultItem"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault item does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "Vault"
      summary: "Updates the specified vault item."
      description: "Only complete definitions are accepted. Fields not specified will\
        \ be NULLed."
      operationId: "Vault_UpdateVaultItem"
      parameters:
      - in: "body"
        name: "item"
        description: "The complete definition of the vault item that should be updated."
        required: false
        schema:
          $ref: "#/definitions/VaultItem"
        x-nullable: true
        x-exportParamName: "Item"
      - name: "vaultItemGuid"
        in: "path"
        description: "The Guid of the vault item that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultItemGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault item does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Vault"
      summary: "Deletes the specified vault item."
      operationId: "Vault_DeleteVaultItem"
      parameters:
      - name: "vaultItemGuid"
        in: "path"
        description: "The Guid of the vault item that should be deleted."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultItemGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault item does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    patch:
      tags:
      - "Vault"
      summary: "Partially updates the specified vault item."
      description: "The vault item type cannot be changed with this operation."
      operationId: "Vault_PartiallyUpdateVaultItem"
      parameters:
      - in: "body"
        name: "item"
        description: "Part of the definition of the vault item that should be updated."
        required: false
        schema:
          $ref: "#/definitions/VaultItem"
        x-nullable: true
        x-exportParamName: "Item"
      - name: "vaultItemGuid"
        in: "path"
        description: "The Guid of the vault item that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultItemGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault item does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /VaultSection:
    get:
      tags:
      - "Vault"
      summary: "Returns all vault sections."
      operationId: "Vault_GetAllVaultSections"
      parameters: []
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VaultSection"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Vault"
      summary: "Creates a new vault section."
      description: "When a new vault section is created, the user that created the\
        \ section is granted View and Edit authorizations to that section. The VaultSectionGuid\
        \ attribute should be omitted in the request body. The Guid of the newly created\
        \ section will be returned in the response."
      operationId: "Vault_CreateNewVaultSection"
      parameters:
      - in: "body"
        name: "section"
        description: "The attributes of the vault section that should be created."
        required: false
        schema:
          $ref: "#/definitions/VaultSection"
        x-nullable: true
        x-exportParamName: "Section"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultSection"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /VaultSection/{vaultSectionGuid}:
    get:
      tags:
      - "Vault"
      summary: "Returns the specified vault section."
      operationId: "Vault_GetVaultSection"
      parameters:
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the requested vault section."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultSection"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    put:
      tags:
      - "Vault"
      summary: "Updates the specified vault section."
      operationId: "Vault_UpdateVaultSection"
      parameters:
      - in: "body"
        name: "item"
        required: false
        schema:
          $ref: "#/definitions/VaultSection"
        x-nullable: true
        x-exportParamName: "Item"
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the vault section that should be updated."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned"
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    delete:
      tags:
      - "Vault"
      summary: "Deletes the specified vault section."
      operationId: "Vault_DeleteVaultSection"
      parameters:
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the vault section that should be deleted."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /VaultSection/{vaultSectionGuid}/Authorization:
    get:
      tags:
      - "Vault"
      summary: "Returns all authorizations for the specified vault section."
      operationId: "Vault_GetAuthorizationsForVaultSection"
      parameters:
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the vault section for which to return authorizations."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "200":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultSectionAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
    post:
      tags:
      - "Vault"
      summary: "Creates a new authorization for the specified vault section."
      description: "The AuthorizationId attribute should be omitted in the request\
        \ body. The newly created authorization will be returned in the response.\
        \ An authorization should be granted to either an individual operator, or\
        \ an operator group. Therefore, either specify the OperatorGuid attribute\
        \ or the OperatorGroupGuid attribute."
      operationId: "Vault_CreateAuthorizationForVaultSection"
      parameters:
      - in: "body"
        name: "authorization"
        required: false
        schema:
          $ref: "#/definitions/VaultSectionAuthorization"
        x-nullable: true
        x-exportParamName: "Authorization"
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the vault section for which to create the new authorization."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      security:
      - basicauth:
        - ""
      responses:
        "201":
          description: "The request completed successfully."
          schema:
            $ref: "#/definitions/VaultSectionAuthorization"
          x-nullable: false
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
  /VaultSection/{vaultSectionGuid}/Authorization/{authorizationGuid}:
    delete:
      tags:
      - "Vault"
      summary: "Deletes the specified authorization for the specified vault section."
      operationId: "Vault_DeleteAuthorizationForVaultSection"
      parameters:
      - name: "vaultSectionGuid"
        in: "path"
        description: "The Guid of the vault section for which the authorization should\
          \ be deleted."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "VaultSectionGuid"
      - name: "authorizationGuid"
        in: "path"
        description: "The Guid of the authorization that should be deleted."
        required: true
        type: "string"
        format: "guid"
        x-nullable: false
        x-exportParamName: "AuthorizationGuid"
      security:
      - basicauth:
        - ""
      responses:
        "204":
          description: "The request completed successfully. No content is returned."
        "400":
          description: "The request failed."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
        "404":
          description: "The requested vault section does not exist.\nor\nThe requested\
            \ vault section authorization does not exist."
          schema:
            $ref: "#/definitions/MessageList"
          x-nullable: false
          x-expectedSchemas:
          - description: "The requested vault section does not exist."
            schema:
              $ref: "#/definitions/MessageList"
          - description: "The requested vault section authorization does not exist."
            schema:
              $ref: "#/definitions/MessageList"
securityDefinitions:
  basicauth:
    description: "Authentication with API account"
    type: "basic"
  user-basicauth:
    description: "Authentication with user account (for API account registration only)"
    type: "basic"
definitions:
  Timezone:
    type: "object"
    required:
    - "HasDaylightSaving"
    - "OffsetFromUtc"
    - "TimezoneId"
    properties:
      TimezoneId:
        type: "integer"
        description: "The time zone unique identifier"
      Description:
        type: "string"
        description: "The description of the time zone"
      OffsetFromUtc:
        type: "integer"
        description: "The offset from UTC in minutes (if this time zone runs behind\
          \ UTC, the number is negative)"
      HasDaylightSaving:
        type: "boolean"
        description: "Indicates whether or not this time zone uses Daylight Saving\
          \ Time"
      DaylightSavingOffset:
        type: "integer"
        description: "The time offset for Daylight Saving Time in minutes"
      DaylightSavingStart:
        example: "2023-01-24T13:42:18"
        description: "The Daylight Saving start date/time"
      DaylightSavingEnd:
        example: "2023-01-24T13:42:18"
        description: "The Daylight Saving end date/time"
    description: "Time zone available in Uptrends"
    example:
      OffsetFromUtc: 6
      Description: "Description"
      DaylightSavingStart: "2023-01-24T13:42:18"
      DaylightSavingEnd: "2023-01-24T13:42:18"
      TimezoneId: 0
      HasDaylightSaving: true
      DaylightSavingOffset: 1
  MessageList:
    type: "object"
    properties:
      Messages:
        type: "array"
        items:
          $ref: "#/definitions/MessageInfo"
  MessageInfo:
    type: "object"
    properties:
      Message:
        type: "string"
  CheckpointsHealth:
    type: "object"
    required:
    - "HealthyServers"
    - "NumberOfServers"
    - "UnhealthyServers"
    properties:
      HealthyServers:
        type: "integer"
        description: "The number of healthy servers"
      UnhealthyServers:
        type: "integer"
        description: "The number of unhealthy servers"
      NumberOfServers:
        type: "integer"
        description: "The number of servers"
      Servers:
        type: "array"
        description: "The health of each server"
        items:
          $ref: "#/definitions/ServerHealth"
    description: "CheckpointsHealth"
    example:
      NumberOfServers: 1
      UnhealthyServers: 6
      Servers:
      - Status: "Status"
        StatusDetails: {}
        CheckpointName: "CheckpointName"
      - Status: "Status"
        StatusDetails: {}
        CheckpointName: "CheckpointName"
      HealthyServers: 0
  ServerHealth:
    type: "object"
    properties:
      CheckpointName:
        type: "string"
        description: "The name of the checkpoint"
      Status:
        type: "string"
        description: "The status of the server"
      StatusDetails:
        $ref: "#/definitions/ServerHealth_StatusDetails"
    description: "ServerHealth"
    example:
      Status: "Status"
      StatusDetails: {}
      CheckpointName: "CheckpointName"
  ServerStatusDetails:
    type: "object"
    properties:
      LastOnlineUtc:
        example: "2023-01-24T13:42:18"
        description: "The UTC time the server was last online"
    description: "ServerStatusDetails"
  RumWebsite:
    type: "object"
    required:
    - "RumWebsiteId"
    properties:
      RumWebsiteId:
        type: "string"
        format: "guid"
      Description:
        type: "string"
    example:
      Description: "Description"
      RumWebsiteId: "RumWebsiteId"
  RumMetricValues:
    type: "object"
    required:
    - "Metric"
    properties:
      Metric:
        $ref: "#/definitions/RumMetric"
      Median:
        type: "integer"
        format: "int32"
      Minimum:
        type: "integer"
        format: "int32"
      Maximum:
        type: "integer"
        format: "int32"
      Average:
        type: "integer"
        format: "int32"
      Count:
        type: "integer"
        format: "int32"
    example:
      Minimum: 6
      Maximum: 1
      Average: 5
      Median: 0
      Metric: {}
      Count: 5
  RumMetric:
    type: "string"
    description: "Defines a RUM metric."
    enum:
    - "PageViews"
    - "LoadTime"
    - "TimeToFirstByte"
    - "PageReadyTime"
    - "NetworkDuration"
    - "RedirectDuration"
    - "DnsDuration"
    - "ConnectDuration"
    - "BackendDuration"
    - "SendDuration"
    - "ReceiveDuration"
    - "FrontEndDuration"
    - "DomDuration"
    - "RenderDuration"
    - "DownloadTime"
    x-enumNames:
    - "PageViews"
    - "LoadTime"
    - "TimeToFirstByte"
    - "PageReadyTime"
    - "NetworkDuration"
    - "RedirectDuration"
    - "DnsDuration"
    - "ConnectDuration"
    - "BackendDuration"
    - "SendDuration"
    - "ReceiveDuration"
    - "FrontEndDuration"
    - "DomDuration"
    - "RenderDuration"
    - "DownloadTime"
  PresetPeriodType:
    type: "string"
    description: ""
    enum:
    - "CurrentDay"
    - "CurrentWeek"
    - "CurrentMonth"
    - "CurrentQuarter"
    - "CurrentYear"
    - "PreviousDay"
    - "PreviousWeek"
    - "PreviousMonth"
    - "PreviousQuarter"
    - "PreviousYear"
    - "Last2Hours"
    - "Last6Hours"
    - "Last12Hours"
    - "Last24Hours"
    - "Last48Hours"
    - "Last7Days"
    - "Last30Days"
    - "Last60Days"
    - "Last90Days"
    - "Last365Days"
    - "Last3Months"
    - "Last6Months"
    - "Last12Months"
    - "Last24Months"
    - "All"
    x-enumNames:
    - "CurrentDay"
    - "CurrentWeek"
    - "CurrentMonth"
    - "CurrentQuarter"
    - "CurrentYear"
    - "PreviousDay"
    - "PreviousWeek"
    - "PreviousMonth"
    - "PreviousQuarter"
    - "PreviousYear"
    - "Last2Hours"
    - "Last6Hours"
    - "Last12Hours"
    - "Last24Hours"
    - "Last48Hours"
    - "Last7Days"
    - "Last30Days"
    - "Last60Days"
    - "Last90Days"
    - "Last365Days"
    - "Last3Months"
    - "Last6Months"
    - "Last12Months"
    - "Last24Months"
    - "All"
  RumWebsiteWithMetricValues:
    type: "object"
    required:
    - "RumWebsiteId"
    properties:
      RumWebsiteId:
        type: "string"
        format: "guid"
      Description:
        type: "string"
      MetricValues:
        type: "array"
        items:
          $ref: "#/definitions/RumMetricValues"
    example:
      Description: "Description"
      RumWebsiteId: "RumWebsiteId"
      MetricValues:
      - Minimum: 6
        Maximum: 1
        Average: 5
        Median: 0
        Metric: {}
        Count: 5
      - Minimum: 6
        Maximum: 1
        Average: 5
        Median: 0
        Metric: {}
        Count: 5
  AccountStatistics:
    type: "object"
    properties:
      AccountId:
        type: "string"
      ExpirationDate:
        example: "2023-01-24T13:42:18"
      MonitorQuota:
        $ref: "#/definitions/MonitorQuota"
      OperatorQuota:
        $ref: "#/definitions/OperatorQuota"
      RemainingMessageCredits:
        type: "integer"
        format: "int32"
    example:
      OperatorQuota:
        Operators: 4
        OperatorsInUse: 7
      AccountId: "AccountId"
      ExpirationDate: "2023-01-24T13:42:18"
      MonitorQuota:
        ApiMonitoringCreditsInUse: 2
        TransactionCredits: 7
        TransactionCreditsInUse: 9
        BrowserMonitors: 1
        Monitors: 3
        ApiMonitoringCredits: 5
        BasicMonitors: 0
        BasicMonitorsInUse: 6
        MonitorsInUse: 2
        BrowserMonitorsInUse: 5
      RemainingMessageCredits: 1
  MonitorQuota:
    type: "object"
    properties:
      BasicMonitors:
        type: "integer"
        format: "int32"
      BasicMonitorsInUse:
        type: "integer"
        format: "int32"
      BrowserMonitors:
        type: "integer"
        format: "int32"
      BrowserMonitorsInUse:
        type: "integer"
        format: "int32"
      ApiMonitoringCredits:
        type: "integer"
        format: "int32"
      ApiMonitoringCreditsInUse:
        type: "integer"
        format: "int32"
      TransactionCredits:
        type: "integer"
        format: "int32"
      TransactionCreditsInUse:
        type: "integer"
        format: "int32"
      Monitors:
        type: "integer"
        format: "int32"
      MonitorsInUse:
        type: "integer"
        format: "int32"
    example:
      ApiMonitoringCreditsInUse: 2
      TransactionCredits: 7
      TransactionCreditsInUse: 9
      BrowserMonitors: 1
      Monitors: 3
      ApiMonitoringCredits: 5
      BasicMonitors: 0
      BasicMonitorsInUse: 6
      MonitorsInUse: 2
      BrowserMonitorsInUse: 5
  OperatorQuota:
    type: "object"
    properties:
      Operators:
        type: "integer"
        format: "int32"
      OperatorsInUse:
        type: "integer"
        format: "int32"
    example:
      Operators: 4
      OperatorsInUse: 7
  AccountSettings:
    type: "object"
    required:
    - "TimezoneId"
    properties:
      TimezoneId:
        type: "integer"
    example:
      TimezoneId: 0
  CheckpointRegion:
    type: "object"
    required:
    - "Id"
    properties:
      Id:
        type: "integer"
      Name:
        type: "string"
      ChildRegions:
        type: "array"
        items:
          type: "integer"
    example:
      Id: 0
      ChildRegions:
      - 6
      - 6
      Name: "Name"
  Checkpoint:
    type: "object"
    required:
    - "CheckpointId"
    - "HasHighAvailability"
    - "IsPrimaryCheckpoint"
    - "SupportsIpv6"
    properties:
      CheckpointId:
        type: "integer"
        description: "The Id of the checkpoint"
      CheckpointName:
        type: "string"
        description: "The name of the checkpoint"
      Code:
        type: "string"
        description: "The location code of the checkpoint"
      Ipv4Addresses:
        type: "array"
        description: "The IPv4 addresses of the checkpoint "
        items:
          type: "string"
      Ipv6Addresses:
        type: "array"
        description: "The IPv6 addresses of the checkpoint"
        items:
          $ref: "#/definitions/Ipv6Address"
      IsPrimaryCheckpoint:
        type: "boolean"
        description: "Checkpoint is primary"
      SupportsIpv6:
        type: "boolean"
        description: "Checkpoint supports IPv6"
      HasHighAvailability:
        type: "boolean"
        description: "Checkpoint has high availability"
    description: "Checkpoint"
    example:
      Ipv4Addresses:
      - "Ipv4Addresses"
      - "Ipv4Addresses"
      CheckpointId: 0
      IsPrimaryCheckpoint: true
      SupportsIpv6: true
      Ipv6Addresses:
      - IpAddress: "IpAddress"
      - IpAddress: "IpAddress"
      CheckpointName: "CheckpointName"
      Code: "Code"
      HasHighAvailability: true
  Ipv6Address:
    type: "object"
    properties:
      IpAddress:
        type: "string"
        description: "The IPv6 address"
    description: "Ipv6 address"
    example:
      IpAddress: "IpAddress"
  Dashboard:
    type: "object"
    properties:
      DashboardGuid:
        type: "string"
        format: "guid"
      Name:
        type: "string"
      DashboardFilter:
        $ref: "#/definitions/DashboardFilter"
      AutoRefresh:
        type: "boolean"
    example:
      DashboardGuid: "DashboardGuid"
      DashboardFilter:
        CheckpointRegions:
        - 6
        - 6
        SelectedPeriod:
          SelectedPeriodType: {}
          PresetPeriod: {}
          Start: "2023-01-24T13:42:18"
          End: "2023-01-24T13:42:18"
        Checkpoints:
        - 0
        - 0
        Monitors:
        - "Monitors"
        - "Monitors"
        MonitorGroups:
        - "MonitorGroups"
        - "MonitorGroups"
      AutoRefresh: true
      Name: "Name"
  DashboardFilter:
    type: "object"
    properties:
      SelectedPeriod:
        $ref: "#/definitions/SelectedPeriod"
      Monitors:
        type: "array"
        items:
          type: "string"
          format: "guid"
      MonitorGroups:
        type: "array"
        items:
          type: "string"
          format: "guid"
      Checkpoints:
        type: "array"
        items:
          type: "integer"
      CheckpointRegions:
        type: "array"
        items:
          type: "integer"
    example:
      CheckpointRegions:
      - 6
      - 6
      SelectedPeriod:
        SelectedPeriodType: {}
        PresetPeriod: {}
        Start: "2023-01-24T13:42:18"
        End: "2023-01-24T13:42:18"
      Checkpoints:
      - 0
      - 0
      Monitors:
      - "Monitors"
      - "Monitors"
      MonitorGroups:
      - "MonitorGroups"
      - "MonitorGroups"
  SelectedPeriod:
    type: "object"
    properties:
      SelectedPeriodType:
        $ref: "#/definitions/SelectedPeriod_SelectedPeriodType"
      Start:
        example: "2023-01-24T13:42:18"
        description: "The start of a custom period (can't be used together with the\
          \ SelectedPeriodType parameter)"
      End:
        example: "2023-01-24T13:42:18"
        description: "The end of a custom period"
      PresetPeriod:
        $ref: "#/definitions/SelectedPeriod_PresetPeriod"
    example:
      SelectedPeriodType: {}
      PresetPeriod: {}
      Start: "2023-01-24T13:42:18"
      End: "2023-01-24T13:42:18"
  SelectedPeriodType:
    type: "string"
    description: ""
    enum:
    - "PresetPeriod"
    - "SpecificDates"
    x-enumNames:
    - "PresetPeriod"
    - "SpecificDates"
  PublicStatusPage:
    type: "object"
    properties:
      PublicDashboardGuid:
        type: "string"
        format: "guid"
      Name:
        type: "string"
      IsPublished:
        type: "boolean"
      PresetPeriodType:
        $ref: "#/definitions/PresetPeriodType"
      CustomizationInfo:
        $ref: "#/definitions/CustomizationInfo"
      SlaGuid:
        type: "string"
        format: "guid"
      SlaGuidSpecified:
        type: "boolean"
      MonitorGuids:
        type: "array"
        items:
          type: "string"
          format: "guid"
      MonitorGroupGuids:
        type: "array"
        items:
          type: "string"
          format: "guid"
    example:
      MonitorGroupGuids:
      - "MonitorGroupGuids"
      - "MonitorGroupGuids"
      PresetPeriodType: {}
      SlaGuidSpecified: true
      IsPublished: true
      SlaGuid: "SlaGuid"
      MonitorGuids:
      - "MonitorGuids"
      - "MonitorGuids"
      CustomizationInfo:
        TitleText: "TitleText"
        MainColor: "MainColor"
        FooterText: "FooterText"
        SortRowsProperty: {}
        SortColumnsNewToOld: true
        CommentText: "CommentText"
        TextColor: "TextColor"
        CommentTitle: "CommentTitle"
        BackgroundColor: "BackgroundColor"
        MonitorNameOverrideFieldName: "MonitorNameOverrideFieldName"
      PublicDashboardGuid: "PublicDashboardGuid"
      Name: "Name"
  CustomizationInfo:
    type: "object"
    required:
    - "SortColumnsNewToOld"
    - "SortRowsProperty"
    properties:
      MainColor:
        type: "string"
      BackgroundColor:
        type: "string"
      TextColor:
        type: "string"
      TitleText:
        type: "string"
      FooterText:
        type: "string"
      MonitorNameOverrideFieldName:
        type: "string"
      SortColumnsNewToOld:
        type: "boolean"
      SortRowsProperty:
        $ref: "#/definitions/SortOrderEnum"
      CommentTitle:
        type: "string"
      CommentText:
        type: "string"
    example:
      TitleText: "TitleText"
      MainColor: "MainColor"
      FooterText: "FooterText"
      SortRowsProperty: {}
      SortColumnsNewToOld: true
      CommentText: "CommentText"
      TextColor: "TextColor"
      CommentTitle: "CommentTitle"
      BackgroundColor: "BackgroundColor"
      MonitorNameOverrideFieldName: "MonitorNameOverrideFieldName"
  SortOrderEnum:
    type: "string"
    description: ""
    enum:
    - "Alphabetical"
    - "ByStatus"
    x-enumNames:
    - "Alphabetical"
    - "ByStatus"
  PSPAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  PSPAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "ViewPublicDashboard"
    x-enumNames:
    - "ViewPublicDashboard"
  ScheduledReport:
    type: "object"
    properties:
      ScheduledReportGuid:
        type: "string"
        format: "guid"
      Hash:
        type: "string"
      DashboardGuid:
        type: "string"
        format: "guid"
      DashboardGuidSpecified:
        type: "boolean"
      FileType:
        $ref: "#/definitions/ScheduledReportFileType"
      IsActive:
        type: "boolean"
      Schedule:
        $ref: "#/definitions/Schedule"
      SelectedPeriod:
        $ref: "#/definitions/PresetPeriodTypeWithExclusive"
      InternalNotes:
        type: "string"
      Notes:
        type: "string"
      Recipients:
        $ref: "#/definitions/Recipients"
    example:
      DashboardGuid: "DashboardGuid"
      SelectedPeriod: {}
      DashboardGuidSpecified: true
      Recipients:
        Operators:
        - "Operators"
        - "Operators"
        OperatorGroups:
        - "OperatorGroups"
        - "OperatorGroups"
        ExtraEmailAddresses:
        - "ExtraEmailAddresses"
        - "ExtraEmailAddresses"
      FileType: {}
      IsActive: true
      Schedule:
        WeekDay: {}
        ScheduleType: {}
        Month: 0
        QuarterStartMonth: 1
        Time: "Time"
        MonthDay: 6
      InternalNotes: "InternalNotes"
      ScheduledReportGuid: "ScheduledReportGuid"
      Hash: "Hash"
      Notes: "Notes"
  ScheduledReportFileType:
    type: "string"
    description: "Scheduled report file type"
    enum:
    - "PDFAttachment"
    - "PDFLink"
    - "ExcelAttachment"
    - "ExcelLink"
    - "Html"
    x-enumNames:
    - "PDFAttachment"
    - "PDFLink"
    - "ExcelAttachment"
    - "ExcelLink"
    - "Html"
  Schedule:
    type: "object"
    properties:
      ScheduleType:
        $ref: "#/definitions/ScheduleType"
      Time:
        type: "string"
        format: "duration"
      WeekDay:
        $ref: "#/definitions/DayOfWeek"
      Month:
        type: "integer"
        format: "int32"
      MonthDay:
        type: "integer"
        format: "int32"
      QuarterStartMonth:
        type: "integer"
        format: "int32"
    example:
      WeekDay: {}
      ScheduleType: {}
      Month: 0
      QuarterStartMonth: 1
      Time: "Time"
      MonthDay: 6
  ScheduleType:
    type: "string"
    description: ""
    enum:
    - "Daily"
    - "Weekly"
    - "Monthly"
    - "Quarterly"
    - "Yearly"
    x-enumNames:
    - "Daily"
    - "Weekly"
    - "Monthly"
    - "Quarterly"
    - "Yearly"
  DayOfWeek:
    type: "string"
    description: ""
    enum:
    - "Sunday"
    - "Monday"
    - "Tuesday"
    - "Wednesday"
    - "Thursday"
    - "Friday"
    - "Saturday"
    x-enumNames:
    - "Sunday"
    - "Monday"
    - "Tuesday"
    - "Wednesday"
    - "Thursday"
    - "Friday"
    - "Saturday"
  PresetPeriodTypeWithExclusive:
    type: "string"
    description: ""
    enum:
    - "CurrentDay"
    - "CurrentWeek"
    - "CurrentMonth"
    - "CurrentQuarter"
    - "CurrentYear"
    - "PreviousDay"
    - "PreviousWeek"
    - "PreviousMonth"
    - "PreviousQuarter"
    - "PreviousYear"
    - "Last2Hours"
    - "Last6Hours"
    - "Last12Hours"
    - "Last24Hours"
    - "Last48Hours"
    - "Last7Days"
    - "Last30Days"
    - "Last60Days"
    - "Last90Days"
    - "Last365Days"
    - "Last3Months"
    - "Last6Months"
    - "Last12Months"
    - "Last24Months"
    - "Last2HoursExcl"
    - "Last6HoursExcl"
    - "Last12HoursExcl"
    - "Last24HoursExcl"
    - "Last48HoursExcl"
    - "Last7DaysExcl"
    - "Last30DaysExcl"
    - "Last60DaysExcl"
    - "Last90DaysExcl"
    - "Last365DaysExcl"
    - "Last3MonthsExcl"
    - "Last6MonthsExcl"
    - "Last12MonthsExcl"
    - "Last24MonthsExcl"
    - "All"
    x-enumNames:
    - "CurrentDay"
    - "CurrentWeek"
    - "CurrentMonth"
    - "CurrentQuarter"
    - "CurrentYear"
    - "PreviousDay"
    - "PreviousWeek"
    - "PreviousMonth"
    - "PreviousQuarter"
    - "PreviousYear"
    - "Last2Hours"
    - "Last6Hours"
    - "Last12Hours"
    - "Last24Hours"
    - "Last48Hours"
    - "Last7Days"
    - "Last30Days"
    - "Last60Days"
    - "Last90Days"
    - "Last365Days"
    - "Last3Months"
    - "Last6Months"
    - "Last12Months"
    - "Last24Months"
    - "Last2HoursExcl"
    - "Last6HoursExcl"
    - "Last12HoursExcl"
    - "Last24HoursExcl"
    - "Last48HoursExcl"
    - "Last7DaysExcl"
    - "Last30DaysExcl"
    - "Last60DaysExcl"
    - "Last90DaysExcl"
    - "Last365DaysExcl"
    - "Last3MonthsExcl"
    - "Last6MonthsExcl"
    - "Last12MonthsExcl"
    - "Last24MonthsExcl"
    - "All"
  Recipients:
    type: "object"
    properties:
      Operators:
        type: "array"
        items:
          type: "string"
          format: "guid"
      OperatorGroups:
        type: "array"
        items:
          type: "string"
          format: "guid"
      ExtraEmailAddresses:
        type: "array"
        items:
          type: "string"
    example:
      Operators:
      - "Operators"
      - "Operators"
      OperatorGroups:
      - "OperatorGroups"
      - "OperatorGroups"
      ExtraEmailAddresses:
      - "ExtraEmailAddresses"
      - "ExtraEmailAddresses"
  Sla:
    type: "object"
    properties:
      SlaGuid:
        type: "string"
        format: "guid"
        description: "The unique key of this sla."
      Hash:
        type: "string"
        description: "Hash corresponding with this sla."
      Description:
        type: "string"
        description: "The description name of this sla."
      UptimeErrorThreshold:
        type: "number"
        format: "double"
      UptimeWarningThreshold:
        type: "number"
        format: "double"
      LoadTimeErrorThreshold:
        type: "number"
        format: "double"
      OperatorReponseTimeThreshold:
        type: "integer"
        format: "int32"
    example:
      Description: "Description"
      UptimeWarningThreshold: 6.027456183070403
      OperatorReponseTimeThreshold: 5
      SlaGuid: "SlaGuid"
      Hash: "Hash"
      UptimeErrorThreshold: 0.8008281904610115
      LoadTimeErrorThreshold: 1.4658129805029452
  ExclusionPeriod:
    type: "object"
    properties:
      ExclusionPeriodId:
        type: "integer"
        format: "int32"
      Description:
        type: "string"
      From:
        example: "2023-01-24T13:42:18"
      Until:
        example: "2023-01-24T13:42:18"
      Hash:
        type: "string"
    example:
      Description: "Description"
      From: "2023-01-24T13:42:18"
      Hash: "Hash"
      ExclusionPeriodId: 0
      Until: "2023-01-24T13:42:18"
  StatisticsResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          $ref: "#/definitions/Statistics"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data:
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
  Statistics:
    type: "object"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "string"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: "Id"
  StatisticsAttributes:
    type: "object"
    required:
    - "EndDateTime"
    - "StartDateTime"
    properties:
      StartDateTime:
        example: "2023-01-24T13:42:18"
      EndDateTime:
        example: "2023-01-24T13:42:18"
      Alerts:
        type: "integer"
        format: "int32"
      SlaTarget:
        type: "number"
        format: "double"
      SlaTargetTotalTime:
        type: "number"
        format: "double"
      OperatorResponseTarget:
        type: "number"
        format: "double"
      OperatorResponseTime:
        type: "number"
        format: "double"
      DowntimePercentage:
        type: "number"
        format: "double"
      UptimePercentage:
        type: "number"
        format: "double"
      Checks:
        type: "integer"
        format: "int64"
      ConfirmedErrors:
        type: "integer"
        format: "int32"
      UnconfirmedErrors:
        type: "integer"
        format: "int32"
      Uptime:
        type: "integer"
        format: "int64"
      Downtime:
        type: "integer"
        format: "int64"
      TotalTime:
        type: "number"
        format: "decimal"
      ResolveTime:
        type: "number"
        format: "decimal"
      ConnectionTime:
        type: "number"
        format: "decimal"
      DownloadTime:
        type: "number"
        format: "decimal"
      TotalBytes:
        type: "integer"
        format: "int64"
  RelationObject:
    type: "object"
    properties:
      Attributes:
        description: "Object attributes "
      Id:
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    example:
      Type: "Type"
      Relationships:
      - null
      - null
      Attributes: ""
      Links:
        key: "Links"
      Id: ""
  LinksData:
    type: "object"
    properties:
      Next:
        type: "string"
        description: "Url for next data set"
      Self:
        type: "string"
        description: "Url for this data set (data might get updated, depending on\
          \ your parameters)"
    description: "Links with reference to self and next data set"
  MetaData:
    type: "object"
    properties:
      Timestamp:
        example: "2023-01-24T13:42:18"
      Period:
        $ref: "#/definitions/PeriodMetaData"
  PeriodMetaData:
    type: "object"
    required:
    - "MaximumRetentionDays"
    properties:
      Warning:
        type: "string"
      MaximumRetentionDays:
        type: "integer"
        format: "int32"
  AlertResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          $ref: "#/definitions/Alert"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
      Cursors:
        $ref: "#/definitions/AlertResponse_Cursors"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Cursors: {}
      Data:
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
  Alert:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "string"
        format: "guid"
        description: "Identifier "
      Type:
        type: "string"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    description: "Represents the values/results of a single check done by a monitor"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: "Id"
  AlertAttributes:
    type: "object"
    required:
    - "AlertType"
    - "FirstError"
    - "FirstErrorMonitorCheckId"
    - "MonitorCheckId"
    - "MonitorGuid"
    - "Timestamp"
    properties:
      AlertType:
        $ref: "#/definitions/AlertAttributes_AlertType"
      MonitorGuid:
        type: "string"
        format: "guid"
        description: "The monitor identifier."
      Timestamp:
        example: "2023-01-24T13:42:18"
        description: "Date/time stamp of the alert."
      FirstError:
        example: "2023-01-24T13:42:18"
        description: "Date/time stamp of the first monitor check."
      MonitorCheckId:
        type: "integer"
        format: "int64"
        description: "The Id of the monitor check that triggered this alert."
      FirstErrorMonitorCheckId:
        type: "integer"
        format: "int64"
        description: "The Id of the first monitor check error that led to this alert."
      ErrorDescription:
        type: "string"
        description: "A text value that describes the error that was found, or OK\
          \ if no error was found."
      ErrorMessage:
        type: "string"
        description: "Any additional error information, if available."
      IncidentKey:
        type: "string"
        description: "The incident key of this alert."
    description: "Alert attributes "
  AlertType:
    type: "string"
    description: ""
    enum:
    - "Ok"
    - "Error"
    - "Reminder"
    x-enumNames:
    - "Ok"
    - "Error"
    - "Reminder"
  CursorsData:
    type: "object"
    properties:
      Next:
        type: "string"
        description: "Cursor for next data set"
      Self:
        type: "string"
        description: "Cursor for this data set (data might get updated, depending\
          \ on your parameters)"
    description: "Cursors can be used to navigate the dataset in a fixed manner"
  SortDirection:
    type: "string"
    description: ""
    enum:
    - "Ascending"
    - "Descending"
    x-enumNames:
    - "Ascending"
    - "Descending"
  Integration:
    type: "object"
    required:
    - "IntegrationGuid"
    - "Type"
    properties:
      IntegrationGuid:
        type: "string"
        format: "guid"
        description: "Guid of Integration in Alert Definition Escalation Level"
      Name:
        type: "string"
        description: "Name of Integration in Alert Definition Escalation Level"
      Type:
        $ref: "#/definitions/Integration_Type"
      ExtraEmailAddresses:
        type: "string"
        description: "Extra emailadresses for this integration (if type == email)"
      StatusHubServiceList:
        type: "array"
        description: "All statushubs for this integration (if type == statushub)"
        items:
          $ref: "#/definitions/IntegrationServiceMap"
      IntegrationServices:
        type: "array"
        description: "All integrations services."
        items:
          type: "string"
          format: "guid"
      Hash:
        type: "string"
    example:
      StatusHubServiceList:
      - MonitorGuid: "MonitorGuid"
        IntegrationServiceGuid: "IntegrationServiceGuid"
      - MonitorGuid: "MonitorGuid"
        IntegrationServiceGuid: "IntegrationServiceGuid"
      Type: {}
      IntegrationServices:
      - "IntegrationServices"
      - "IntegrationServices"
      IntegrationGuid: "IntegrationGuid"
      Hash: "Hash"
      ExtraEmailAddresses: "ExtraEmailAddresses"
      Name: "Name"
  IntegrationTypeEnum:
    type: "string"
    description: ""
    enum:
    - "Slack"
    - "PagerDuty"
    - "Sms"
    - "Email"
    - "Phone"
    - "Statushub"
    - "GenericWebhook"
    x-enumNames:
    - "Slack"
    - "PagerDuty"
    - "Sms"
    - "Email"
    - "Phone"
    - "Statushub"
    - "GenericWebhook"
  IntegrationServiceMap:
    type: "object"
    required:
    - "IntegrationServiceGuid"
    - "MonitorGuid"
    properties:
      MonitorGuid:
        type: "string"
        format: "guid"
      IntegrationServiceGuid:
        type: "string"
        format: "guid"
    example:
      MonitorGuid: "MonitorGuid"
      IntegrationServiceGuid: "IntegrationServiceGuid"
  IntegrationAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    description: "Alert definition authorization"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  IntegrationAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "UseIntegration"
    - "EditIntegration"
    x-enumNames:
    - "UseIntegration"
    - "EditIntegration"
  MonitorStatusResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  MonitorStatus:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "string"
        format: "guid"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: "Id"
  MonitorStatusAttributes:
    type: "object"
    required:
    - "ErrorCode"
    - "ErrorLevel"
    - "UptimePercentage"
    properties:
      ErrorLevel:
        $ref: "#/definitions/MonitorStatusAttributes_ErrorLevel"
      LastCheck:
        example: "2023-01-24T13:42:18"
        description: "Last checked timeStamp for this monitor"
      CheckpointId:
        type: "integer"
        format: "int32"
        description: "Checkpoint id for the monitor status"
      CheckpointName:
        type: "string"
        description: "Checkpoint name for the monitor status"
      ErrorDescription:
        type: "string"
        description: "Error description for the monitor status"
      UptimePercentage:
        type: "number"
        format: "double"
        description: "Uptime percentage for the monitor status"
      ErrorCode:
        type: "integer"
        format: "int32"
        description: "Error code for the monitor status"
      LastMonitorCheckId:
        type: "integer"
        format: "int64"
        description: "Last monitor check id"
      TotalTime:
        type: "integer"
        format: "int32"
        description: "Total time for the monitor status"
    description: "Monitor Status attributes"
  LastErrorLevel:
    type: "string"
    description: ""
    enum:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
    - "Inactive"
    - "Inconclusive"
    x-enumNames:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
    - "Inactive"
    - "Inconclusive"
  MonitorStatusListResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          $ref: "#/definitions/MonitorStatus"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data:
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: "Id"
  AlertDefinition:
    type: "object"
    properties:
      AlertDefinitionGuid:
        type: "string"
        format: "guid"
        description: "The unique key of this Alert Definition."
      Hash:
        type: "string"
        description: "Hash corresponding with this alert definition."
      AlertName:
        type: "string"
        description: "Name of this Alert Definition."
      IsActive:
        type: "boolean"
        description: "Indicates whether this Alert Definition is active."
    example:
      AlertName: "AlertName"
      IsActive: true
      AlertDefinitionGuid: "AlertDefinitionGuid"
      Hash: "Hash"
  AlertDefinitionMember:
    type: "object"
    properties:
      MonitorGuid:
        type: "string"
        format: "guid"
        description: "Guid of Monitor in Alert Definition"
      MonitorGroupGuid:
        type: "string"
        format: "guid"
        description: "Guid of GroupMonitor in Alert Definition"
    example:
      MonitorGuid: "MonitorGuid"
      MonitorGroupGuid: "MonitorGroupGuid"
  AlertDefinitionMonitor:
    type: "object"
    required:
    - "AlertDefinition"
    - "Monitor"
    properties:
      AlertDefinition:
        type: "string"
        format: "guid"
      Monitor:
        type: "string"
        format: "guid"
    example:
      Monitor: "Monitor"
      AlertDefinition: "AlertDefinition"
  AlertDefinitionMonitorGroup:
    type: "object"
    required:
    - "AlertDefinition"
    - "MonitorGroup"
    properties:
      AlertDefinition:
        type: "string"
        format: "guid"
      MonitorGroup:
        type: "string"
        format: "guid"
    example:
      AlertDefinition: "AlertDefinition"
      MonitorGroup: "MonitorGroup"
  EscalationLevel:
    type: "object"
    properties:
      EscalationMode:
        $ref: "#/definitions/EscalationMode"
      Id:
        type: "integer"
      ThresholdErrorCount:
        type: "integer"
        format: "int32"
      ThresholdMinutes:
        type: "integer"
        format: "int32"
      IsActive:
        type: "boolean"
      Message:
        type: "string"
      NumberOfReminders:
        type: "integer"
        format: "int32"
      ReminderDelay:
        type: "integer"
        format: "int32"
      IncludeTraceRoute:
        type: "boolean"
      Hash:
        type: "string"
        description: "Hash corresponding with this escalation level."
    example:
      EscalationMode: {}
      Message: "Message"
      IncludeTraceRoute: true
      IsActive: true
      NumberOfReminders: 5
      ReminderDelay: 5
      ThresholdErrorCount: 6
      Id: 0
      Hash: "Hash"
      ThresholdMinutes: 1
  EscalationMode:
    type: "string"
    description: ""
    enum:
    - "AlertOnErrorCount"
    - "AlertOnErrorDuration"
    x-enumNames:
    - "AlertOnErrorCount"
    - "AlertOnErrorDuration"
  AlertEscalationLevelMember:
    type: "object"
    properties:
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "Guid of Operator in Alert Definition Escalation Level"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "Guid of Group Operator in Alert Definition Escalation Level"
    example:
      OperatorGuid: "OperatorGuid"
      OperatorGroupGuid: "OperatorGroupGuid"
  AlertDefinitionOperator:
    type: "object"
    required:
    - "AlertDefinition"
    - "Escalationlevel"
    - "Operator"
    properties:
      AlertDefinition:
        type: "string"
        format: "guid"
      Escalationlevel:
        type: "integer"
      Operator:
        type: "string"
        format: "guid"
    example:
      Operator: "Operator"
      Escalationlevel: 0
      AlertDefinition: "AlertDefinition"
  AlertDefinitionOperatorGroup:
    type: "object"
    required:
    - "AlertDefinition"
    - "Escalationlevel"
    - "OperatorGroup"
    properties:
      AlertDefinition:
        type: "string"
        format: "guid"
      Escalationlevel:
        type: "integer"
      OperatorGroup:
        type: "string"
        format: "guid"
    example:
      Escalationlevel: 0
      OperatorGroup: "OperatorGroup"
      AlertDefinition: "AlertDefinition"
  EscalationLevelIntegration:
    type: "object"
    properties:
      IntegrationGuid:
        type: "string"
        format: "guid"
        description: "The unique key of this Integration."
      ExtraEmailAddresses:
        type: "array"
        description: "Extra email addresses"
        items:
          type: "string"
      ExtraEmailAddressesSpecified:
        type: "boolean"
        description: "Specified Extra EmailAddresses For Patch request"
      StatusHubServiceList:
        type: "array"
        description: "StatusHub Service Mapping"
        items:
          $ref: "#/definitions/IntegrationServiceMap"
      StatusHubServiceListSpecified:
        type: "boolean"
        description: "Specified StatusHubServiceList For Patch request"
      IsActive:
        type: "boolean"
        description: "Indicates whether this Integration is active."
      Hash:
        type: "string"
    example:
      StatusHubServiceList:
      - MonitorGuid: "MonitorGuid"
        IntegrationServiceGuid: "IntegrationServiceGuid"
      - MonitorGuid: "MonitorGuid"
        IntegrationServiceGuid: "IntegrationServiceGuid"
      IsActive: true
      IntegrationGuid: "IntegrationGuid"
      Hash: "Hash"
      ExtraEmailAddresses:
      - "ExtraEmailAddresses"
      - "ExtraEmailAddresses"
      ExtraEmailAddressesSpecified: true
      StatusHubServiceListSpecified: true
  AlertDefinitionAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    description: "Alert definition authorization"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  AlertDefinitionAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "EditAlertDefinition"
    x-enumNames:
    - "EditAlertDefinition"
  CheckpointListResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          $ref: "#/definitions/Checkpoint2"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data:
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: 0
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: 0
  Checkpoint2:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: 0
  CheckpointAttributes:
    type: "object"
    required:
    - "HasHighAvailability"
    - "IsPrimaryCheckpoint"
    - "SupportsIpv6"
    properties:
      CheckpointName:
        type: "string"
        description: "The name of the checkpoint"
      Code:
        type: "string"
        description: "Location code of the checkpoint"
      Ipv4Addresses:
        type: "array"
        description: "Ipv4 addresses of the checkpoint "
        items:
          type: "string"
      IpV6Addresses:
        type: "array"
        description: "Ipv6 addresses of the checkpoint"
        items:
          type: "string"
      IsPrimaryCheckpoint:
        type: "boolean"
        description: "Checkpoint is primary"
      SupportsIpv6:
        type: "boolean"
        description: "Checkpoint supports IPv6"
      HasHighAvailability:
        type: "boolean"
        description: "Checkpoint has high availability"
    description: "Checkpoint attributes"
  CheckpointResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  CheckpoinServerResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  CheckpointServer:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
  CheckpointServerAttributes:
    type: "object"
    properties:
      Ip4Address:
        type: "string"
        description: "The ipv4 address"
      IpV6Address:
        type: "string"
        description: "The ipv6 address"
      Capabilities:
        type: "array"
        description: "List of server's capabilities"
        items:
          $ref: "#/definitions/CapabilityFilterEnum"
    description: "Checkpoint server attributes"
  CapabilityFilterEnum:
    type: "string"
    description: ""
    enum:
    - "IPv6"
    - "PrimaryServer"
    - "HighAvailability"
    - "FiddlerProxy"
    x-enumNames:
    - "IPv6"
    - "PrimaryServer"
    - "HighAvailability"
    - "FiddlerProxy"
  ListStringResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          type: "string"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data:
      - "Data"
      - "Data"
  MonitorGroup:
    type: "object"
    required:
    - "IsAll"
    properties:
      MonitorGroupGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this monitor group"
      Description:
        type: "string"
        description: "The descriptive name of this probe group"
      IsAll:
        type: "boolean"
        description: "Indicates whether this is the default group for all probes"
      IsQuotaUnlimited:
        type: "boolean"
        description: "Indicates whether the monitor quota is unlimited\nOnly administrators\
          \ can change this"
      BasicMonitorQuota:
        type: "integer"
        format: "int32"
        description: "The basic monitor quota for the monitor group\nOnly administrators\
          \ can change this"
      BrowserMonitorQuota:
        type: "integer"
        format: "int32"
        description: "The browser monitor quota for the monitor group\nOnly administrators\
          \ can change this"
      TransactionMonitorQuota:
        type: "integer"
        format: "int32"
        description: "The transaction monitor quota for the monitor group\nOnly administrators\
          \ can change this"
      ApiMonitorQuota:
        type: "integer"
        format: "int32"
        description: "The api monitor quota for the monitor group\nOnly administrators\
          \ can change this"
      ClassicQuota:
        type: "integer"
        format: "int32"
        description: "The classic quota for the monitor group\nOnly administrators\
          \ can change this"
    description: "Monitor group"
    example:
      BasicMonitorQuota: 0
      Description: "Description"
      TransactionMonitorQuota: 1
      BrowserMonitorQuota: 6
      ClassicQuota: 5
      ApiMonitorQuota: 5
      IsAll: true
      MonitorGroupGuid: "MonitorGroupGuid"
      IsQuotaUnlimited: true
  MonitorGroupMember:
    type: "object"
    required:
    - "MonitorGuid"
    properties:
      MonitorGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this monitor"
    description: "Monitor group member"
    example:
      MonitorGuid: "MonitorGuid"
  MaintenancePeriod:
    type: "object"
    required:
    - "Id"
    - "MaintenanceType"
    - "ScheduleMode"
    properties:
      Id:
        type: "integer"
        format: "int32"
        description: "The unique ID of this maintenance period"
      ScheduleMode:
        $ref: "#/definitions/MaintenancePeriod_ScheduleMode"
      StartDateTime:
        example: "2023-01-24T13:42:18"
        description: "The start date/time for this schedule (for one-time schedules\
          \ only)"
      EndDateTime:
        example: "2023-01-24T13:42:18"
        description: "The end date/time for this maintenance period (for one-time\
          \ maintenance periods only)"
      WeekDay:
        $ref: "#/definitions/MaintenancePeriod_WeekDay"
      MonthDay:
        type: "integer"
        format: "int32"
        description: "the month day for this maintenance period (for montly maintenance\
          \ periods only)"
      StartTime:
        type: "string"
        description: "The start time of this maintenance period"
      EndTime:
        type: "string"
        description: "The end time of this maintenance period"
      MaintenanceType:
        $ref: "#/definitions/MaintenancePeriod_MaintenanceType"
      Description:
        type: "string"
        description: "The description for this maintenance period"
    example:
      WeekDay: {}
      StartDateTime: "2023-01-24T13:42:18"
      Description: "Description"
      EndTime: "EndTime"
      EndDateTime: "2023-01-24T13:42:18"
      ScheduleMode: {}
      StartTime: "StartTime"
      MonthDay: 6
      Id: 0
      MaintenanceType: {}
  ScheduleMode:
    type: "string"
    description: ""
    enum:
    - "OneTime"
    - "Daily"
    - "Weekly"
    - "Monthly"
    x-enumNames:
    - "OneTime"
    - "Daily"
    - "Weekly"
    - "Monthly"
  MaintenanceTypes:
    type: "string"
    description: ""
    enum:
    - "DisableMonitoring"
    - "DisableNotifications"
    x-enumNames:
    - "DisableMonitoring"
    - "DisableNotifications"
  MonitorGroupAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    description: "Monitor group authorization"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  MonitorGroupAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "ViewMonitorDataInGroup"
    - "ViewMonitorsInGroup"
    - "EditMonitorsInGroup"
    - "CreateAndDeleteMonitorsInGroup"
    x-enumNames:
    - "ViewMonitorDataInGroup"
    - "ViewMonitorsInGroup"
    - "EditMonitorsInGroup"
    - "CreateAndDeleteMonitorsInGroup"
  Operator:
    type: "object"
    properties:
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this operator"
      Hash:
        type: "string"
        description: "The hash of this operator."
      Password:
        type: "string"
        description: "The password is a required field if AllowNativeLogin is set\
          \ to True"
      FullName:
        type: "string"
        description: "The full name of this operator"
      Email:
        type: "string"
        description: "The email address of this operator. This also serves as the\
          \ username"
      MobilePhone:
        type: "string"
        description: "The phone number of this operator to which SMS and phone alerts\
          \ can be sent. Start with a plus (+) sign and your country code"
      OutgoingPhoneNumberId:
        type: "integer"
        format: "int32"
        description: "The id of the phone number that will be used to send phone alerts\
          \ (See /OutgoingPhoneNumber API under Miscellaneous for available ids)"
      OutgoingPhoneNumberIdSpecified:
        type: "boolean"
      IsAccountAdministrator:
        type: "boolean"
        description: "This indicates if the operator is the account administrator."
      BackupEmail:
        type: "string"
        description: "The backup email address of this operator"
      IsOnDuty:
        type: "boolean"
        description: "Indicates whether the operator is currently active"
      CultureName:
        type: "string"
        description: "If ommitted the operator will use the account culture. If set\
          \ it will override the account default"
      CultureNameSpecified:
        type: "boolean"
      TimeZoneId:
        type: "integer"
        description: "The id of the timezone of this operator (See /Timezone API under\
          \ Miscellaneous for available timezones)"
      TimeZoneIdSpecified:
        type: "boolean"
      SmsProvider:
        $ref: "#/definitions/Operator_SmsProvider"
      UseNumericSender:
        type: "boolean"
        description: "Set to True to override the default behavior of sending SMS\
          \ alerts with textual sender ID"
      UseNumericSenderSpecified:
        type: "boolean"
      AllowNativeLogin:
        type: "boolean"
        description: "This can only be set to false if the account has SSO enabled.\
          \ Ommitting or providing null will use the account default"
      AllowNativeLoginSpecified:
        type: "boolean"
      AllowSingleSignon:
        type: "boolean"
        description: "This can only be set to true if the account has SSO enabled.\
          \ Ommitting or providing null will use the account default"
      AllowSingleSignonSpecified:
        type: "boolean"
      DefaultDashboard:
        type: "string"
        description: "This is used to set the default dashboard for the operator.\
          \ \nValid options are:\nUseAccountSpecifiedDashboard (This will use the\
          \ dashboard specified for the account)\nAny built-in dashboard: e.g. AccountOverview\n\
          Any custom dashboard to which the operator has access to, defined by the\
          \ guid of this dashboard"
      SetupMode:
        $ref: "#/definitions/OperatorSetupMode"
    description: "Operator"
    example:
      UseNumericSender: true
      Email: "Email"
      UseNumericSenderSpecified: true
      AllowNativeLogin: true
      OutgoingPhoneNumberIdSpecified: true
      OperatorGuid: "OperatorGuid"
      OutgoingPhoneNumberId: 0
      AllowNativeLoginSpecified: true
      AllowSingleSignonSpecified: true
      Hash: "Hash"
      SmsProvider: {}
      MobilePhone: "MobilePhone"
      BackupEmail: "BackupEmail"
      SetupMode: {}
      DefaultDashboard: "DefaultDashboard"
      CultureName: "CultureName"
      CultureNameSpecified: true
      FullName: "FullName"
      TimeZoneId: 6
      AllowSingleSignon: true
      TimeZoneIdSpecified: true
      Password: "Password"
      IsAccountAdministrator: true
      IsOnDuty: true
  SmsProvider:
    type: "string"
    description: ""
    enum:
    - "UseAccountSetting"
    - "SmsProviderEurope"
    - "SmsProviderInternational"
    - "SmsProviderEurope2"
    - "SmsProviderUSA"
    x-enumNames:
    - "UseAccountSetting"
    - "SmsProviderEurope"
    - "SmsProviderInternational"
    - "SmsProviderEurope2"
    - "SmsProviderUSA"
  OperatorSetupMode:
    type: "string"
    description: ""
    enum:
    - "Manual"
    - "Invitation"
    x-enumNames:
    - "Manual"
    - "Invitation"
  OperatorMember:
    type: "object"
    required:
    - "OperatorGroupGuid"
    properties:
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this Operator"
    example:
      OperatorGroupGuid: "OperatorGroupGuid"
  OperatorAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "AccountAccess"
    - "AccountAdministrator"
    - "AllowInfra"
    - "FinancialOperator"
    - "TechnicalContact"
    - "ShareDashboards"
    - "CreateAlertDefinition"
    - "CreateIntegration"
    x-enumNames:
    - "AccountAccess"
    - "AccountAdministrator"
    - "AllowInfra"
    - "FinancialOperator"
    - "TechnicalContact"
    - "ShareDashboards"
    - "CreateAlertDefinition"
    - "CreateIntegration"
  OperatorDutySchedule:
    type: "object"
    required:
    - "Id"
    - "ScheduleMode"
    properties:
      Id:
        type: "integer"
        format: "int32"
        description: "The unique ID of this maintenance period"
      ScheduleMode:
        $ref: "#/definitions/MaintenancePeriod_ScheduleMode"
      StartDateTime:
        example: "2023-01-24T13:42:18"
        description: "The start date/time for this schedule (for one-time schedules\
          \ only)"
      EndDateTime:
        example: "2023-01-24T13:42:18"
        description: "The end date/time for this maintenance period (for one-time\
          \ maintenance periods only)"
      WeekDay:
        $ref: "#/definitions/MaintenancePeriod_WeekDay"
      MonthDay:
        type: "integer"
        format: "int32"
        description: "the month day for this maintenance period (for montly maintenance\
          \ periods only)"
      StartTime:
        type: "string"
        description: "The start time of this maintenance period"
      EndTime:
        type: "string"
        description: "The end time of this maintenance period"
    example:
      WeekDay: {}
      StartDateTime: "2023-01-24T13:42:18"
      EndTime: "EndTime"
      EndDateTime: "2023-01-24T13:42:18"
      ScheduleMode: {}
      StartTime: "StartTime"
      MonthDay: 6
      Id: 0
  OperatorScheduleMode:
    type: "string"
    description: ""
    enum:
    - "OneTime"
    - "Daily"
    - "Weekly"
    - "Monthly"
    x-enumNames:
    - "OneTime"
    - "Daily"
    - "Weekly"
    - "Monthly"
  OutgoingPhoneNumberDetails:
    type: "object"
    required:
    - "Id"
    properties:
      Id:
        type: "integer"
        format: "int32"
      PhoneNumber:
        type: "string"
      Description:
        type: "string"
    example:
      Description: "Description"
      PhoneNumber: "PhoneNumber"
      Id: 0
  OperatorGroup:
    type: "object"
    properties:
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this Operator group"
      Description:
        type: "string"
        description: "The descriptive name of this operator group"
      IsEveryone:
        type: "boolean"
        description: "Indicates whether this is the default group for all operators"
      IsAdministratorsGroup:
        type: "boolean"
    example:
      Description: "Description"
      IsAdministratorsGroup: true
      IsEveryone: true
      OperatorGroupGuid: "OperatorGroupGuid"
  OperatorGroupMember:
    type: "object"
    required:
    - "OperatorGuid"
    properties:
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of this Operator"
    example:
      OperatorGuid: "OperatorGuid"
  OperatorGroupAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "ShareDashboards"
    - "AllowInfra"
    - "Administrator"
    - "TechnicalContact"
    - "FinancialOperator"
    - "BasicOperator"
    - "CreateAlertDefinition"
    - "CreateIntegration"
    x-enumNames:
    - "ShareDashboards"
    - "AllowInfra"
    - "Administrator"
    - "TechnicalContact"
    - "FinancialOperator"
    - "BasicOperator"
    - "CreateAlertDefinition"
    - "CreateIntegration"
  MonitorCheckResponse:
    type: "object"
    properties:
      Data:
        type: "array"
        description: "The resposne data/monitor checks"
        items:
          $ref: "#/definitions/MonitorCheck"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
      Cursors:
        $ref: "#/definitions/AlertResponse_Cursors"
    description: "Response of the MonitorCheck endpoint"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Cursors: {}
      Data:
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: 0
      - Type: "Type"
        Relationships:
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        - Type: "Type"
          Relationships:
          - null
          - null
          Attributes: ""
          Links:
            key: "Links"
          Id: ""
        Attributes: {}
        Links:
          key: "Links"
        Id: 0
  MonitorCheck:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int64"
        description: "Identifier "
      Type:
        type: "string"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    description: "Represents the values/results of a single check done by a monitor"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: 0
  MonitorCheckAttributes:
    type: "object"
    required:
    - "ConnectionTime"
    - "DownloadTime"
    - "ErrorCode"
    - "ErrorLevel"
    - "IsPartialCheck"
    - "MonitorGuid"
    - "ResolveTime"
    - "StagingMode"
    - "Timestamp"
    - "TotalTime"
    properties:
      MonitorGuid:
        type: "string"
        format: "guid"
        description: "Monitor identifier"
      Timestamp:
        example: "2023-01-24T13:42:18"
        description: "Date/time stamp of the check"
      ErrorCode:
        type: "integer"
        format: "int32"
        description: "The numeric Uptrends error code in case of an error result,\
          \ or 0 in case of an OK result."
      TotalTime:
        type: "number"
        format: "double"
        description: "The number of milliseconds needed to complete the monitor check."
      ResolveTime:
        type: "number"
        format: "double"
        description: "The number of milliseconds needed to perform the DNS query for\
          \ this check, when appropriate."
      ConnectionTime:
        type: "number"
        format: "double"
        description: "The number of milliseconds needed to establish a connection."
      DownloadTime:
        type: "number"
        format: "double"
        description: "The number of milliseconds needed to download the response data."
      TotalBytes:
        type: "integer"
        format: "int32"
        description: "The number of downloaded bytes for this check."
      ResolvedIpAddress:
        type: "string"
        description: "The IP address that was found for the specified domain name\
          \ as part of this monitor check."
      ErrorLevel:
        $ref: "#/definitions/MonitorCheckAttributes_ErrorLevel"
      ErrorDescription:
        type: "string"
        description: "A text value that describes the error that was found, or OK\
          \ if no error was found."
      ErrorMessage:
        type: "string"
        description: "Any additional error information, if available."
      StagingMode:
        type: "boolean"
        description: "Did the check come from a staging monitor?"
      ServerId:
        type: "integer"
        format: "int32"
        description: "The Id of the Uptrends checkpoint server that performed this\
          \ check."
      HttpStatusCode:
        type: "integer"
        format: "int32"
        description: "The HTTP status code returned (if applicable)"
      IsPartialCheck:
        type: "boolean"
        description: "This is a partial concurrent measurement, part of a concurrent\
          \ check"
      IsConcurrentCheck:
        type: "boolean"
        description: "Is this a master concurrent check record"
    description: "Monitor check attributes "
  ErrorLevel:
    type: "string"
    description: ""
    enum:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
    x-enumNames:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
  ErrorLevelFilter:
    type: "string"
    description: ""
    enum:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
    x-enumNames:
    - "NoError"
    - "Unconfirmed"
    - "Confirmed"
  SingleMonitorCheckResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  HttpDetailsResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  HttpCheckDetails:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int64"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
  HttpAttributes:
    type: "object"
    properties:
      ResponseBody:
        type: "string"
        description: "The HTML code retrieved from the target"
      ResponseHeaders:
        type: "string"
        description: "The HTTP response headers retrieved from the target "
      Url:
        type: "string"
        description: "The URL of the HTTP Check. "
    description: "Http details attributes"
  MsaDetailsResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  HttpEngineCheckDetails:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int64"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
  HttpEngineAttributes:
    type: "object"
    required:
    - "PassedSteps"
    - "TotalSteps"
    properties:
      StepResults:
        type: "array"
        description: "The results of the steps "
        items:
          $ref: "#/definitions/HttpEngineStep"
      TimingInfo:
        $ref: "#/definitions/HttpEngineAttributes_TimingInfo"
      TotalSteps:
        type: "integer"
        format: "int32"
        description: "Number of total steps"
      PassedSteps:
        type: "integer"
        format: "int32"
        description: "Number of passed/succeed tests"
    description: "HttpEngineAttributes describes the attributes of a Multi-step Api\
      \ monitor check"
  HttpEngineStep:
    type: "object"
    required:
    - "ResponseCompleted"
    - "StepExecuted"
    - "TotalTime"
    properties:
      StepName:
        type: "string"
        description: "The name of the step"
      Url:
        type: "string"
        description: "Url the step was executed on"
      HttpStatusCode:
        type: "string"
        description: "The HTTP status code returned"
      HttpMethod:
        type: "string"
        description: "Http method used in this step"
      HttpStatusDescription:
        type: "string"
        description: "Step description"
      ResponseCompleted:
        type: "boolean"
        description: "Did the response complete?"
      StepExecuted:
        type: "boolean"
        description: "Was this step executed?"
      AssertionResultsInfo:
        $ref: "#/definitions/HttpEngineStep_AssertionResultsInfo"
      TotalTime:
        type: "integer"
        format: "int64"
        description: "Number of milliseconds it took for this step to succeed"
      ResponseHeaders:
        type: "string"
        description: "Response headers"
      ResponseBody:
        type: "string"
        description: "Response body"
      RequestHeaders:
        type: "string"
        description: "Request headers send"
      RequestBody:
        type: "string"
        description: "Request body send"
      ResolvedIpAddress:
        type: "string"
        description: "Resolved IP address"
    description: "HttpEngineStep describes the results of a step in a Multi-step Api\
      \ monitor"
  AssertionResultsInfo:
    type: "object"
    required:
    - "PassedAssertions"
    - "TotalAssertions"
    properties:
      TotalAssertions:
        type: "integer"
        format: "int32"
      PassedAssertions:
        type: "integer"
        format: "int32"
      AssertionInfos:
        type: "array"
        items:
          $ref: "#/definitions/AssertionInfo"
  AssertionInfo:
    type: "object"
    required:
    - "Completed"
    - "Passed"
    properties:
      Completed:
        type: "boolean"
        description: "Was the assertion completed?"
      Passed:
        type: "boolean"
        description: "Did the assertion pass?"
      Description:
        type: "string"
        description: "Description"
      ExceptionDescription:
        type: "string"
        description: "Discription of the exception trown if applicable"
    description: "Information about a single assertion"
  StepTimingInfo:
    type: "object"
    required:
    - "DelayMilliseconds"
    - "ElapsedMilliseconds"
    - "EndUtc"
    - "IsValid"
    - "StartUtc"
    properties:
      Description:
        type: "string"
      StartUtc:
        example: "2023-01-24T13:42:18"
      EndUtc:
        example: "2023-01-24T13:42:18"
      ElapsedMilliseconds:
        type: "integer"
        format: "int64"
      DelayMilliseconds:
        type: "integer"
        format: "int64"
      SubTimingInfos:
        type: "array"
        items:
          $ref: "#/definitions/StepTimingInfo"
      IsValid:
        type: "boolean"
        description: "If true, this TimingInfo should be counted as part of the sum\
          \ of its siblings. If false, the TimingInfo should be discarded (e.g. for\
          \ PreDelays we don't want to count)."
  TransactionDetailsResponse:
    type: "object"
    properties:
      Data:
        $ref: "#/definitions/MonitorStatusResponse_Data"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: {}
  TransactionCheckDetails:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int64"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
  TransactionAttributes:
    type: "object"
    properties:
      StepResults:
        type: "array"
        description: "Results of the transaction steps"
        items:
          $ref: "#/definitions/TransactionStepOResourceObject"
      ResponseBody:
        type: "string"
        description: "The HTML code returned in case of errors"
  TransactionStepOResourceObject:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int32"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
  TransactionStep:
    type: "object"
    required:
    - "HasError"
    - "StepNumber"
    - "TotalTime"
    properties:
      StepNumber:
        type: "integer"
        format: "int32"
        description: "Step (index) number"
      StepName:
        type: "string"
        description: "The name of the step"
      TotalTime:
        type: "number"
        format: "double"
        description: "Number of milliseconds it took for this step to succeed"
      Elements:
        type: "array"
        description: "Text representation of the step element results"
        items:
          type: "string"
      HasError:
        type: "boolean"
        description: "Did this step result in an error?"
    description: "Describes one step in a transaction"
  WaterfallResponse:
    type: "object"
    required:
    - "Id"
    properties:
      Attributes:
        $ref: "#/definitions/Statistics_Attributes"
      Id:
        type: "integer"
        format: "int64"
        description: "Identifier "
      Type:
        type: "string"
        description: "Object type"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Links:
        type: "object"
        description: "Links related to the object"
        additionalProperties:
          type: "string"
    example:
      Type: "Type"
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Attributes: {}
      Links:
        key: "Links"
      Id: 0
  WaterfallInfo:
    type: "object"
    properties:
      PageLoadMetrics:
        $ref: "#/definitions/WaterfallInfo_PageLoadMetrics"
      W3CNavigationTiming:
        $ref: "#/definitions/WaterfallInfo_W3CNavigationTiming"
      Elements:
        type: "array"
        description: "Elements in the waterfall"
        items:
          $ref: "#/definitions/PageElement"
      DomainGroupNames:
        type: "array"
        description: "List of domain groups used in the waterfall elements"
        items:
          type: "string"
  PageLoadMetrics:
    type: "object"
    properties:
      CumulativeLayoutShift:
        type: "number"
        format: "decimal"
        description: "Measures the sum total of all individual layout shift scores\
          \ for every unexpected layout shift that occurs during the entire lifespan\
          \ of the page.\nA score lower than 0.1 is considered a good score.\nBetween\
          \ 0.1 and 0.25 could use some improvement.\n0.25 or higher is a poor score.\n\
          https://web.dev/cls/?utm_source=devtools\n\nIn case the data was inconclusive\
          \ null is returned."
      FirstContentfulPaint:
        type: "integer"
        format: "int32"
        description: "Measures the time from when the page starts loading to when\
          \ any of the page's content is rendered on screen.\nA score lower than 1000ms\
          \ is considered a good score.\nhttps://web.dev/fcp/\n\nIn case the data\
          \ was inconclusive null is returned."
      LargestContentfulPaint:
        type: "integer"
        format: "int32"
        description: "The render timestamp of the largest image or text block visible\
          \ within the viewport.\nA score lower than 2500ms is good.\nBetween 2500ms\
          \ and 4000ms needs improvement.\n4000ms or higher is poor\nhttps://web.dev/lcp/\n\
          \nIn case the data was inconclusive null is returned."
      TotalBlockingTime:
        type: "integer"
        format: "int32"
        description: "The Total Blocking Time (TBT) metric measures the total amount\
          \ of time between First Contentful Paint (FCP) and Time to Interactive (TTI)\
          \ where the main thread was blocked for long enough to prevent input responsiveness.\n\
          \nhttps://web.dev/tbt/\n\nIn case the data was inconclusive null is returned."
      TimeToInteractive:
        type: "integer"
        format: "int32"
        description: "TTI measures how long it takes a page to become fully interactive.\
          \ \n\nhttps://web.dev/interactive/\n\nIn case the data was inconclusive\
          \ null is returned."
  W3CNavigationTiming:
    type: "object"
    required:
    - "DomComplete"
    - "DomInteractive"
    - "LoadEvent"
    - "RequestStart"
    - "TimeToFirstByte"
    properties:
      RequestStart:
        type: "integer"
        format: "int32"
        description: "Equal to the requestStart as defined by the W3C. \nIt is a timestamp\
          \ indicating when the browser starts requesting the resource from the webserver\
          \ after the DNS lookup and TCP connection."
      TimeToFirstByte:
        type: "integer"
        format: "int32"
        description: "Equal to the difference between navigationStart and responseStart\
          \ as defined by the W3C. \nIn short, it's the time between when the first\
          \ request was sent from browser to server, and when the first bytes of the\
          \ following response were received by the browser."
      DomInteractive:
        type: "integer"
        format: "int32"
        description: "Equal to domInteractive as defined by W3C. \nIt is a timestamp,\
          \ indicating the document readiness is set to 'interactive', to indicate\
          \ that the browser has stopped parsing the page and the user can start interacting\
          \ with it. \nResources such as scripts, images, stylesheets, or frames may\
          \ still be loading."
      DomComplete:
        type: "integer"
        format: "int32"
        description: "Equal to the domComplete as defined by W3C. \nIt is a timestamp,\
          \ indicating when the main document has been parsed, the DOM has been fully\
          \ loaded, and the page readiness is set to 'complete'."
      LoadEvent:
        type: "integer"
        format: "int32"
        description: "Equal to loadEventEnd as defined by W3C. \nIt is a timestamp,\
          \ indicating when the load event of the current document has completed,\
          \ including all dependent resources such as stylesheets and images."
  PageElement:
    type: "object"
    required:
    - "ConnectTime"
    - "HttpStatusCode"
    - "HttpsHandshakeTime"
    - "Index"
    - "QueueTime"
    - "ReceiveTime"
    - "ResolveTime"
    - "SendTime"
    - "StaleTime"
    - "StartTime"
    - "TimeoutTime"
    - "TotalBytes"
    - "TotalTime"
    - "UrlIsBlocked"
    - "WaitTime"
    properties:
      Index:
        type: "integer"
        format: "int32"
        description: "Index of the element in the waterfall context"
      StartTime:
        type: "integer"
        format: "int32"
        description: "Starting time in milliseconds"
      QueueTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds this element has been queueing, when\
          \ appropriate."
      ResolveTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds needed to perform the DNS query for this\
          \ element, when appropriate."
      ConnectTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds needed to establish a connection."
      StaleTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds the connection was stale"
      HttpsHandshakeTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds needed for the HTTPS handshake"
      SendTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds it took to send data"
      WaitTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds the connection was in waiting state"
      ReceiveTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds it took to retrieve the data"
      TimeoutTime:
        type: "integer"
        format: "int32"
        description: "Number of milliseconds the connection was timed-out "
      TotalTime:
        type: "integer"
        format: "int32"
        description: "Total number of milliseconds it took for the connection to complete"
      HttpStatusCode:
        type: "integer"
        format: "int32"
        description: "The Http status code"
      Url:
        type: "string"
        description: "The requested resource url"
      TotalBytes:
        type: "integer"
        format: "int32"
        description: "Total number of downloaded bytes"
      ElementType:
        type: "string"
        description: "Requested resource element type, can be HTML, scripts, CSS,\
          \ images, frames, objects, data and other"
      RequestHeaders:
        type: "string"
        description: "The HTTP request headers used"
      ResponseHeaders:
        type: "string"
        description: "The HTTP response headers retrieved"
      ResolvedIpAddress:
        description: "The IP address that was found for the specified domain name\
          \ as part of this monitor check."
      GroupIds:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      UrlIsBlocked:
        type: "boolean"
        description: "Was the Url excluded from waterfall (timing) data by the user?"
    description: "Page element describes a page load/request (in a waterfall)"
  ScreenshotResponse:
    type: "object"
    properties:
      Data:
        type: "string"
        description: "The resposne data/monitor checks"
      Links:
        $ref: "#/definitions/StatisticsResponse_Links"
      Relationships:
        type: "array"
        description: "Relationships of the object"
        items:
          $ref: "#/definitions/RelationObject"
      Meta:
        $ref: "#/definitions/StatisticsResponse_Meta"
    example:
      Meta: {}
      Relationships:
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      - Type: "Type"
        Relationships:
        - null
        - null
        Attributes: ""
        Links:
          key: "Links"
        Id: ""
      Links: {}
      Data: "Data"
  Monitor:
    type: "object"
    properties:
      MonitorGuid:
        type: "string"
        format: "guid"
        description: "The unique key of this monitor."
      Name:
        type: "string"
        description: "The name of this monitor."
      MonitorType:
        $ref: "#/definitions/MonitorType"
      GenerateAlert:
        type: "boolean"
        description: "Indicates whether this monitor should generate alerts."
        default: true
      IsActive:
        type: "boolean"
        description: "Indicates whether this monitor is actively running according\
          \ to the monitoring interval."
        default: true
      IsLocked:
        type: "boolean"
        description: "Indicates whether this monitor is locked."
      CustomFields:
        type: "array"
        items:
          $ref: "#/definitions/CustomField"
      SelectedCheckpoints:
        $ref: "#/definitions/SelectedCheckpoints"
      UsePrimaryCheckpointsOnly:
        type: "boolean"
      CheckInterval:
        type: "integer"
        description: "Indicates the interval in seconds"
      MonitorMode:
        $ref: "#/definitions/Monitor_MonitorMode"
      Notes:
        type: "string"
      Hash:
        type: "string"
        description: "Hash corresponding with this monitor."
      RequestHeaders:
        type: "array"
        items:
          $ref: "#/definitions/RequestHeader"
      UserAgent:
        type: "string"
      LoadTimeLimit1:
        type: "integer"
        format: "int32"
      AlertOnLoadTimeLimit1:
        type: "boolean"
      LoadTimeLimit2:
        type: "integer"
        format: "int32"
      AlertOnLoadTimeLimit2:
        type: "boolean"
      Username:
        type: "string"
      AuthenticationType:
        $ref: "#/definitions/ApiHttpAuthenticationType"
      CheckCertificateErrors:
        type: "boolean"
      IpVersion:
        $ref: "#/definitions/IpVersion"
      AlertOnMinimumBytes:
        type: "boolean"
      MinimumBytes:
        type: "integer"
        format: "int32"
      HttpMethod:
        $ref: "#/definitions/HttpMethod"
      TlsVersion:
        $ref: "#/definitions/TlsVersion"
      RequestBody:
        type: "string"
      MatchPatterns:
        type: "array"
        items:
          $ref: "#/definitions/PatternMatch"
      Url:
        type: "string"
      Credits:
        type: "integer"
        format: "int32"
      PredefinedVariables:
        type: "array"
        items:
          $ref: "#/definitions/PredefinedVariable"
      MsaSteps:
        type: "array"
        items:
          $ref: "#/definitions/MsaStep"
      UserDefinedFunctions:
        type: "array"
        items:
          $ref: "#/definitions/UserDefinedFunction"
      CustomMetrics:
        type: "array"
        items:
          $ref: "#/definitions/CustomMetric"
      SelfServiceTransactionScript:
        type: "string"
      MultiStepApiTransactionScript:
        type: "string"
      BlockGoogleAnalytics:
        type: "boolean"
      BlockUptrendsRum:
        type: "boolean"
      BlockUrls:
        type: "array"
        items:
          type: "string"
      Password:
        type: "string"
      NameForPhoneAlerts:
        type: "string"
      ThrottlingOptions:
        $ref: "#/definitions/ThrottlingOptions"
      DnsBypasses:
        type: "array"
        items:
          $ref: "#/definitions/DnsBypass"
      TransactionStepDefinition:
        $ref: "#/definitions/Monitor_TransactionStepDefinition"
      CertificateName:
        type: "string"
      CertificateOrganization:
        type: "string"
      CertificateOrganizationalUnit:
        type: "string"
      CertificateSerialNumber:
        type: "string"
      CertificateFingerprint:
        type: "string"
      CertificateIssuerName:
        type: "string"
      CertificateIssuerCompanyName:
        type: "string"
      CertificateIssuerOrganizationalUnit:
        type: "string"
      CertificateExpirationWarningDays:
        type: "integer"
        format: "int32"
      AlertOnMaximumBytes:
        type: "boolean"
      MaximumBytes:
        type: "integer"
        format: "int32"
      AlertOnMaximumSize:
        type: "boolean"
      ElementMaximumSize:
        type: "integer"
        format: "int32"
      IgnoreExternalElements:
        type: "boolean"
      AlertOnPercentageFail:
        type: "boolean"
      FailedObjectPercentage:
        type: "integer"
        format: "int32"
      DomainGroupGuid:
        type: "string"
        format: "guid"
      DomainGroupGuidSpecified:
        type: "boolean"
      DnsServer:
        type: "string"
      DnsQuery:
        $ref: "#/definitions/DnsQuery"
      DnsExpectedResult:
        type: "string"
      DnsTestValue:
        type: "string"
      Port:
        type: "integer"
        format: "int32"
      DatabaseName:
        type: "string"
      NetworkAddress:
        type: "string"
      ImapSecureConnection:
        type: "boolean"
      SftpAction:
        $ref: "#/definitions/SftpAction"
      SftpActionPath:
        type: "string"
      ExpectedHttpStatusCode:
        type: "integer"
        format: "int32"
      ExpectedHttpStatusCodeSpecified:
        type: "boolean"
      BrowserType:
        $ref: "#/definitions/BrowserType"
      BrowserWindowDimensions:
        $ref: "#/definitions/BrowserWindowDimensions"
      UseConcurrentMonitoring:
        type: "boolean"
      ConcurrentUnconfirmedErrorThreshold:
        type: "integer"
        format: "int32"
      ConcurrentConfirmedErrorThreshold:
        type: "integer"
        format: "int32"
      ErrorConditions:
        type: "array"
        items:
          $ref: "#/definitions/ErrorCondition"
      CreatedDate:
        example: "2023-01-24T13:42:18"
    example:
      ThrottlingOptions:
        ThrottlingSpeedUp: 1
        ThrottlingType: {}
        ThrottlingSpeedDown: 1
        ThrottlingLatency: 6
        ThrottlingValue: {}
      BlockUrls:
      - "BlockUrls"
      - "BlockUrls"
      BrowserWindowDimensions:
        PixelRatio: 9
        MobileDevice: "MobileDevice"
        Height: 8
        IsMobile: true
        Width: 6
      MonitorType: {}
      MatchPatterns:
      - Pattern: "Pattern"
        DateTime:
          MaxDifference: 3
          OffsetUTC: 9
        IsPositive: true
      - Pattern: "Pattern"
        DateTime:
          MaxDifference: 3
          OffsetUTC: 9
        IsPositive: true
      Port: 9
      CheckCertificateErrors: true
      Hash: "Hash"
      NameForPhoneAlerts: "NameForPhoneAlerts"
      Name: "Name"
      BlockUptrendsRum: true
      CertificateSerialNumber: "CertificateSerialNumber"
      UsePrimaryCheckpointsOnly: true
      DnsQuery: {}
      AlertOnMinimumBytes: true
      RequestHeaders:
      - Value: "Value"
        Name: "Name"
      - Value: "Value"
        Name: "Name"
      AlertOnMaximumSize: true
      AuthenticationType: {}
      IpVersion: {}
      CertificateIssuerName: "CertificateIssuerName"
      UserDefinedFunctions:
      - Type: {}
        Mappings:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
        Regex: "Regex"
        JwtSigningKey: "JwtSigningKey"
        JwtAlgorithm: {}
        HashKey: "HashKey"
        Name: "Name"
        HashAlgorithm: {}
      - Type: {}
        Mappings:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
        Regex: "Regex"
        JwtSigningKey: "JwtSigningKey"
        JwtAlgorithm: {}
        HashKey: "HashKey"
        Name: "Name"
        HashAlgorithm: {}
      DnsBypasses:
      - Target: "Target"
        Source: "Source"
      - Target: "Target"
        Source: "Source"
      IgnoreExternalElements: true
      DatabaseName: "DatabaseName"
      GenerateAlert: true
      SftpAction: {}
      TlsVersion: {}
      CustomFields:
      - Value: "Value"
        Name: "Name"
      - Value: "Value"
        Name: "Name"
      SelfServiceTransactionScript: "SelfServiceTransactionScript"
      ErrorConditions:
      - MatchType: {}
        Percentage: "Percentage"
        Value: "Value"
        Level: {}
        Effect: {}
        ErrorConditionType: {}
      - MatchType: {}
        Percentage: "Percentage"
        Value: "Value"
        Level: {}
        Effect: {}
        ErrorConditionType: {}
      ConcurrentConfirmedErrorThreshold: 3
      CreatedDate: "2023-01-24T13:42:18"
      DnsExpectedResult: "DnsExpectedResult"
      HttpMethod: {}
      MaximumBytes: 1
      AlertOnPercentageFail: true
      IsActive: true
      CheckInterval: 5
      DomainGroupGuid: "DomainGroupGuid"
      AlertOnLoadTimeLimit1: true
      CertificateOrganizationalUnit: "CertificateOrganizationalUnit"
      AlertOnLoadTimeLimit2: true
      MinimumBytes: 7
      Url: "Url"
      CustomMetrics:
      - VariableName: "VariableName"
        Name: "Name"
      - VariableName: "VariableName"
        Name: "Name"
      TransactionStepDefinition: {}
      SftpActionPath: "SftpActionPath"
      CertificateIssuerOrganizationalUnit: "CertificateIssuerOrganizationalUnit"
      NetworkAddress: "NetworkAddress"
      BrowserType: {}
      ExpectedHttpStatusCode: 9
      UserAgent: "UserAgent"
      CertificateFingerprint: "CertificateFingerprint"
      FailedObjectPercentage: 5
      PredefinedVariables:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
      CertificateIssuerCompanyName: "CertificateIssuerCompanyName"
      ExpectedHttpStatusCodeSpecified: true
      ConcurrentUnconfirmedErrorThreshold: 6
      Notes: "Notes"
      RequestBody: "RequestBody"
      Password: "Password"
      CertificateOrganization: "CertificateOrganization"
      ElementMaximumSize: 4
      UseConcurrentMonitoring: true
      MonitorGuid: "MonitorGuid"
      IsLocked: true
      MultiStepApiTransactionScript: "MultiStepApiTransactionScript"
      DomainGroupGuidSpecified: true
      SelectedCheckpoints:
        Checkpoints:
        - 0
        - 0
        ExcludeLocations:
        - 1
        - 1
        Regions:
        - 6
        - 6
      DnsServer: "DnsServer"
      BlockGoogleAnalytics: true
      DnsTestValue: "DnsTestValue"
      ImapSecureConnection: true
      MonitorMode: {}
      LoadTimeLimit1: 5
      CertificateExpirationWarningDays: 7
      LoadTimeLimit2: 2
      Credits: 2
      Username: "Username"
      MsaSteps:
      - UseFixedClientCertificate: true
        VaultFileId: "VaultFileId"
        StepType: {}
        RetryUntilSuccessful: true
        Method: {}
        BodyType: {}
        IgnoreCertificateErrors: true
        Assertions:
        - TargetValue: "TargetValue"
          Comparison: {}
          Property: "Property"
          Source: {}
        - TargetValue: "TargetValue"
          Comparison: {}
          Property: "Property"
          Source: {}
        Url: "Url"
        Delay: 4
        Name: "Name"
        MaxAttempts: 7
        Variables:
        - Arguments:
          - null
          - null
          Property: "Property"
          Source: {}
          Name: "Name"
        - Arguments:
          - null
          - null
          Property: "Property"
          Source: {}
          Name: "Name"
        Authentication:
          UserName: "UserName"
          PasswordSpecified: true
          Id: "Id"
          Password: "Password"
        RetryWaitMilliseconds: 1
        RequestHeaders:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
        ClientCertificateVaultItem: "ClientCertificateVaultItem"
        Body: "Body"
      - UseFixedClientCertificate: true
        VaultFileId: "VaultFileId"
        StepType: {}
        RetryUntilSuccessful: true
        Method: {}
        BodyType: {}
        IgnoreCertificateErrors: true
        Assertions:
        - TargetValue: "TargetValue"
          Comparison: {}
          Property: "Property"
          Source: {}
        - TargetValue: "TargetValue"
          Comparison: {}
          Property: "Property"
          Source: {}
        Url: "Url"
        Delay: 4
        Name: "Name"
        MaxAttempts: 7
        Variables:
        - Arguments:
          - null
          - null
          Property: "Property"
          Source: {}
          Name: "Name"
        - Arguments:
          - null
          - null
          Property: "Property"
          Source: {}
          Name: "Name"
        Authentication:
          UserName: "UserName"
          PasswordSpecified: true
          Id: "Id"
          Password: "Password"
        RetryWaitMilliseconds: 1
        RequestHeaders:
        - Value: "Value"
          Key: "Key"
        - Value: "Value"
          Key: "Key"
        ClientCertificateVaultItem: "ClientCertificateVaultItem"
        Body: "Body"
      CertificateName: "CertificateName"
      AlertOnMaximumBytes: true
  MonitorType:
    type: "string"
    description: ""
    enum:
    - "Http"
    - "Https"
    - "Connect"
    - "Ping"
    - "POP3"
    - "SMTP"
    - "FTP"
    - "MySQL"
    - "MSSQL"
    - "WebserviceHttp"
    - "WebserviceHttps"
    - "Transaction"
    - "DNS"
    - "FullPageCheck"
    - "Certificate"
    - "SFTP"
    - "MultiStepApi"
    - "IMAP"
    x-enumNames:
    - "Http"
    - "Https"
    - "Connect"
    - "Ping"
    - "POP3"
    - "SMTP"
    - "FTP"
    - "MySQL"
    - "MSSQL"
    - "WebserviceHttp"
    - "WebserviceHttps"
    - "Transaction"
    - "DNS"
    - "FullPageCheck"
    - "Certificate"
    - "SFTP"
    - "MultiStepApi"
    - "IMAP"
  CustomField:
    type: "object"
    properties:
      Name:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Name: "Name"
  SelectedCheckpoints:
    type: "object"
    properties:
      Checkpoints:
        type: "array"
        items:
          type: "integer"
      Regions:
        type: "array"
        items:
          type: "integer"
      ExcludeLocations:
        type: "array"
        items:
          type: "integer"
    example:
      Checkpoints:
      - 0
      - 0
      ExcludeLocations:
      - 1
      - 1
      Regions:
      - 6
      - 6
  MonitorMode:
    type: "string"
    description: ""
    enum:
    - "Development"
    - "Staging"
    - "Production"
    x-enumNames:
    - "Development"
    - "Staging"
    - "Production"
  RequestHeader:
    type: "object"
    properties:
      Name:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Name: "Name"
  ApiHttpAuthenticationType:
    type: "string"
    description: ""
    enum:
    - "None"
    - "Basic"
    - "NTLM"
    - "Digest"
    x-enumNames:
    - "None"
    - "Basic"
    - "NTLM"
    - "Digest"
  IpVersion:
    type: "string"
    description: ""
    enum:
    - "IpV4"
    - "IpV6"
    x-enumNames:
    - "IpV4"
    - "IpV6"
  HttpMethod:
    type: "string"
    description: ""
    enum:
    - "Get"
    - "Post"
    x-enumNames:
    - "Get"
    - "Post"
  TlsVersion:
    type: "string"
    description: ""
    enum:
    - "Tls12"
    - "Tls11"
    - "Tls10"
    - "Tls12_Tls11"
    - "Tls11_Tls10"
    - "Tls12_Tls11_Tls10"
    - "Tls12_Tls11_Tls10_WithFallback"
    x-enumNames:
    - "Tls12"
    - "Tls11"
    - "Tls10"
    - "Tls12_Tls11"
    - "Tls11_Tls10"
    - "Tls12_Tls11_Tls10"
    - "Tls12_Tls11_Tls10_WithFallback"
  PatternMatch:
    type: "object"
    required:
    - "IsPositive"
    properties:
      Pattern:
        type: "string"
      IsPositive:
        type: "boolean"
      DateTime:
        $ref: "#/definitions/DateTimePatternMatch"
    example:
      Pattern: "Pattern"
      DateTime:
        MaxDifference: 3
        OffsetUTC: 9
      IsPositive: true
  DateTimePatternMatch:
    type: "object"
    required:
    - "MaxDifference"
    - "OffsetUTC"
    properties:
      OffsetUTC:
        type: "integer"
        format: "int32"
      MaxDifference:
        type: "integer"
        format: "int32"
    example:
      MaxDifference: 3
      OffsetUTC: 9
  PredefinedVariable:
    type: "object"
    properties:
      Key:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Key: "Key"
  MsaStep:
    type: "object"
    required:
    - "Delay"
    - "IgnoreCertificateErrors"
    - "MaxAttempts"
    - "Method"
    - "RetryUntilSuccessful"
    - "StepType"
    - "UseFixedClientCertificate"
    properties:
      Url:
        type: "string"
      Method:
        $ref: "#/definitions/HttpMethods"
      Body:
        type: "string"
        description: "The body that will be send in the request. Only used if BodyType\
          \ equals Raw"
      BodyType:
        $ref: "#/definitions/MsaStep_BodyType"
      VaultFileId:
        type: "string"
        format: "guid"
        description: "The guid of the vaultfile that will be send in the request.\
          \ Only used if BodyType equals VaultFiles"
      RequestHeaders:
        type: "array"
        items:
          $ref: "#/definitions/ApiHttpHeaderValue"
      Variables:
        type: "array"
        items:
          $ref: "#/definitions/ApiVariableDefinition"
      Assertions:
        type: "array"
        items:
          $ref: "#/definitions/ApiAssertion"
      Name:
        type: "string"
      UseFixedClientCertificate:
        type: "boolean"
      Authentication:
        $ref: "#/definitions/ApiAuthenticationInfo"
      IgnoreCertificateErrors:
        type: "boolean"
      ClientCertificateVaultItem:
        type: "string"
        format: "guid"
      Delay:
        type: "integer"
        format: "int32"
      StepType:
        $ref: "#/definitions/MsaStepType"
      RetryUntilSuccessful:
        type: "boolean"
      MaxAttempts:
        type: "integer"
        format: "int32"
      RetryWaitMilliseconds:
        type: "integer"
        format: "int32"
    example:
      UseFixedClientCertificate: true
      VaultFileId: "VaultFileId"
      StepType: {}
      RetryUntilSuccessful: true
      Method: {}
      BodyType: {}
      IgnoreCertificateErrors: true
      Assertions:
      - TargetValue: "TargetValue"
        Comparison: {}
        Property: "Property"
        Source: {}
      - TargetValue: "TargetValue"
        Comparison: {}
        Property: "Property"
        Source: {}
      Url: "Url"
      Delay: 4
      Name: "Name"
      MaxAttempts: 7
      Variables:
      - Arguments:
        - null
        - null
        Property: "Property"
        Source: {}
        Name: "Name"
      - Arguments:
        - null
        - null
        Property: "Property"
        Source: {}
        Name: "Name"
      Authentication:
        UserName: "UserName"
        PasswordSpecified: true
        Id: "Id"
        Password: "Password"
      RetryWaitMilliseconds: 1
      RequestHeaders:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
      ClientCertificateVaultItem: "ClientCertificateVaultItem"
      Body: "Body"
  HttpMethods:
    type: "string"
    description: ""
    enum:
    - "GET"
    - "POST"
    - "PUT"
    - "PATCH"
    - "DELETE"
    - "HEAD"
    x-enumNames:
    - "GET"
    - "POST"
    - "PUT"
    - "PATCH"
    - "DELETE"
    - "HEAD"
  MsaBodyType:
    type: "string"
    description: ""
    enum:
    - "Raw"
    - "VaultFiles"
    - "VaultFileAsBinary"
    x-enumNames:
    - "Raw"
    - "VaultFiles"
    - "VaultFileAsBinary"
  ApiHttpHeaderValue:
    type: "object"
    properties:
      Key:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Key: "Key"
  ApiVariableDefinition:
    type: "object"
    required:
    - "Source"
    properties:
      Source:
        $ref: "#/definitions/ApiVariableSourceType"
      Property:
        type: "string"
      Name:
        type: "string"
      Arguments:
        type: "array"
        items:
          $ref: "#/definitions/ApiVariableDefinition"
    example:
      Arguments:
      - null
      - null
      Property: "Property"
      Source: {}
      Name: "Name"
  ApiVariableSourceType:
    type: "string"
    description: ""
    enum:
    - "None"
    - "Constant"
    - "Variable"
    - "ResponseStatusCode"
    - "ResponseStatusDescription"
    - "ResponseBodyJson"
    - "ResponseCompleted"
    - "ResponseBodyText"
    - "Fail"
    - "ContentLengthCalculated"
    - "Duration"
    - "Sum"
    - "Concatenation"
    - "ToBase64"
    - "ToSHA1Hex"
    - "ToMD5Hex"
    - "ResponseBodyXml"
    - "ResponseHeader"
    - "Cookie"
    - "VariablesResolved"
    - "CumulativeDuration"
    - "ResponseHasException"
    - "ExecuteFunction"
    x-enumNames:
    - "None"
    - "Constant"
    - "Variable"
    - "ResponseStatusCode"
    - "ResponseStatusDescription"
    - "ResponseBodyJson"
    - "ResponseCompleted"
    - "ResponseBodyText"
    - "Fail"
    - "ContentLengthCalculated"
    - "Duration"
    - "Sum"
    - "Concatenation"
    - "ToBase64"
    - "ToSHA1Hex"
    - "ToMD5Hex"
    - "ResponseBodyXml"
    - "ResponseHeader"
    - "Cookie"
    - "VariablesResolved"
    - "CumulativeDuration"
    - "ResponseHasException"
    - "ExecuteFunction"
  ApiAssertion:
    type: "object"
    required:
    - "Comparison"
    - "Source"
    properties:
      Source:
        $ref: "#/definitions/ApiAssertionSourceType"
      Property:
        type: "string"
      Comparison:
        $ref: "#/definitions/ApiComparisonType"
      TargetValue:
        type: "string"
    example:
      TargetValue: "TargetValue"
      Comparison: {}
      Property: "Property"
      Source: {}
  ApiAssertionSourceType:
    type: "string"
    description: ""
    enum:
    - "None"
    - "Constant"
    - "Variable"
    - "ResponseStatusCode"
    - "ResponseStatusDescription"
    - "ResponseBodyJson"
    - "ResponseCompleted"
    - "ResponseBodyText"
    - "Fail"
    - "ContentLengthCalculated"
    - "Duration"
    - "Sum"
    - "Concatenation"
    - "ToBase64"
    - "ToSHA1Hex"
    - "ToMD5Hex"
    - "ResponseBodyXml"
    - "ResponseHeader"
    - "Cookie"
    - "VariablesResolved"
    - "CumulativeDuration"
    - "ResponseHasException"
    x-enumNames:
    - "None"
    - "Constant"
    - "Variable"
    - "ResponseStatusCode"
    - "ResponseStatusDescription"
    - "ResponseBodyJson"
    - "ResponseCompleted"
    - "ResponseBodyText"
    - "Fail"
    - "ContentLengthCalculated"
    - "Duration"
    - "Sum"
    - "Concatenation"
    - "ToBase64"
    - "ToSHA1Hex"
    - "ToMD5Hex"
    - "ResponseBodyXml"
    - "ResponseHeader"
    - "Cookie"
    - "VariablesResolved"
    - "CumulativeDuration"
    - "ResponseHasException"
  ApiComparisonType:
    type: "string"
    description: ""
    enum:
    - "Equal"
    - "DoesNotEqual"
    - "ContainsText"
    - "DoesNotContainText"
    - "ShouldBeIgnored"
    - "LessThan"
    - "GreaterThan"
    - "LessThanOrEqual"
    - "GreaterThanOrEqual"
    - "IsNotEmpty"
    - "IsEmpty"
    - "IsNotNull"
    - "IsNull"
    - "DoesNotExist"
    - "Exists"
    x-enumNames:
    - "Equal"
    - "DoesNotEqual"
    - "ContainsText"
    - "DoesNotContainText"
    - "ShouldBeIgnored"
    - "LessThan"
    - "GreaterThan"
    - "LessThanOrEqual"
    - "GreaterThanOrEqual"
    - "IsNotEmpty"
    - "IsEmpty"
    - "IsNotNull"
    - "IsNull"
    - "DoesNotExist"
    - "Exists"
  ApiAuthenticationInfo:
    type: "object"
    required:
    - "AuthenticationType"
    - "Id"
    - "PasswordSpecified"
    properties:
      Id:
        type: "string"
        format: "guid"
      AuthenticationType:
        $ref: "#/definitions/ApiHttpAuthenticationType"
      UserName:
        type: "string"
      Password:
        type: "string"
      PasswordSpecified:
        type: "boolean"
    example:
      UserName: "UserName"
      PasswordSpecified: true
      Id: "Id"
      Password: "Password"
  MsaStepType:
    type: "string"
    description: ""
    enum:
    - "HttpRequest"
    - "Delay"
    x-enumNames:
    - "HttpRequest"
    - "Delay"
  UserDefinedFunction:
    type: "object"
    required:
    - "HashAlgorithm"
    - "Type"
    properties:
      Name:
        type: "string"
      Type:
        $ref: "#/definitions/UserDefinedFunctionType"
      Mappings:
        type: "array"
        items:
          $ref: "#/definitions/UserDefinedFunctionMapping"
      Regex:
        type: "string"
      JwtSigningKey:
        type: "string"
        description: "This property is not supported yet"
      JwtAlgorithm:
        $ref: "#/definitions/UserDefinedFunction_JwtAlgorithm"
      HashKey:
        type: "string"
      HashAlgorithm:
        $ref: "#/definitions/EngineHashAlgorithm"
    example:
      Type: {}
      Mappings:
      - Value: "Value"
        Key: "Key"
      - Value: "Value"
        Key: "Key"
      Regex: "Regex"
      JwtSigningKey: "JwtSigningKey"
      JwtAlgorithm: {}
      HashKey: "HashKey"
      Name: "Name"
      HashAlgorithm: {}
  UserDefinedFunctionType:
    type: "string"
    description: ""
    enum:
    - "Mapping"
    - "Regex"
    - "JwtEncode"
    - "JwtDecode"
    - "Hash"
    x-enumNames:
    - "Mapping"
    - "Regex"
    - "JwtEncode"
    - "JwtDecode"
    - "Hash"
  UserDefinedFunctionMapping:
    type: "object"
    properties:
      Key:
        type: "string"
      Value:
        type: "string"
    example:
      Value: "Value"
      Key: "Key"
  JwtAlgorithm:
    type: "string"
    description: ""
    enum:
    - "HS256"
    - "HS384"
    - "HS512"
    x-enumNames:
    - "HS256"
    - "HS384"
    - "HS512"
  EngineHashAlgorithm:
    type: "string"
    description: ""
    enum:
    - "MD5"
    - "SHA1"
    - "SHA256"
    - "SHA512"
    - "HMACSHA1"
    - "HMACSHA256"
    - "HMACSHA512"
    x-enumNames:
    - "MD5"
    - "SHA1"
    - "SHA256"
    - "SHA512"
    - "HMACSHA1"
    - "HMACSHA256"
    - "HMACSHA512"
  CustomMetric:
    type: "object"
    properties:
      Name:
        type: "string"
      VariableName:
        type: "string"
    example:
      VariableName: "VariableName"
      Name: "Name"
  ThrottlingOptions:
    type: "object"
    properties:
      ThrottlingType:
        $ref: "#/definitions/ThrottlingType"
      ThrottlingValue:
        $ref: "#/definitions/ThrottlingValue"
      ThrottlingSpeedUp:
        type: "integer"
        format: "int32"
      ThrottlingSpeedDown:
        type: "integer"
        format: "int32"
      ThrottlingLatency:
        type: "integer"
        format: "int32"
    example:
      ThrottlingSpeedUp: 1
      ThrottlingType: {}
      ThrottlingSpeedDown: 1
      ThrottlingLatency: 6
      ThrottlingValue: {}
  ThrottlingType:
    type: "string"
    description: ""
    enum:
    - "Inactive"
    - "Browser"
    - "Simulated"
    x-enumNames:
    - "Inactive"
    - "Browser"
    - "Simulated"
  ThrottlingValue:
    type: "string"
    description: ""
    enum:
    - "Adsl"
    - "Fiber"
    - "Cable"
    - "2G"
    - "3G"
    - "4G"
    x-enumNames:
    - "Adsl"
    - "Fiber"
    - "Cable"
    - "_2G"
    - "_3G"
    - "_4G"
  DnsBypass:
    type: "object"
    properties:
      Source:
        type: "string"
      Target:
        type: "string"
    example:
      Target: "Target"
      Source: "Source"
  TransactionStepDefinition:
    type: "object"
    properties:
      Steps:
        type: "array"
        items:
          $ref: "#/definitions/TransactionStep2"
  TransactionStep2:
    type: "object"
    required:
    - "HasScreenshot"
    - "HasWaterfall"
    properties:
      Name:
        type: "string"
      HasScreenshot:
        type: "boolean"
      HasWaterfall:
        type: "boolean"
      SubSteps:
        type: "array"
        items:
          $ref: "#/definitions/TransactionSubStep"
  TransactionSubStep:
    type: "object"
    required:
    - "Type"
    properties:
      Name:
        type: "string"
      Type:
        $ref: "#/definitions/SubStepType"
      Url:
        type: "string"
      SetValue:
        type: "string"
  SubStepType:
    type: "string"
    description: ""
    enum:
    - "Navigate"
    - "Click"
    - "Set"
    - "Test"
    - "Script"
    - "Hover"
    - "Screenshot"
    - "ScrollTo"
    - "WaitForElement"
    - "SwitchToFrame"
    - "SwitchToTab"
    x-enumNames:
    - "Navigate"
    - "Click"
    - "Set"
    - "Test"
    - "Script"
    - "Hover"
    - "Screenshot"
    - "ScrollTo"
    - "WaitForElement"
    - "SwitchToFrame"
    - "SwitchToTab"
  DnsQuery:
    type: "string"
    description: ""
    enum:
    - "ARecord"
    - "CnameRecord"
    - "MxRecord"
    - "NsRecord"
    - "TxtRecord"
    - "SoaRecord"
    - "RootServer"
    - "AaaaRecord"
    - "SrvRecord"
    x-enumNames:
    - "ARecord"
    - "CnameRecord"
    - "MxRecord"
    - "NsRecord"
    - "TxtRecord"
    - "SoaRecord"
    - "RootServer"
    - "AaaaRecord"
    - "SrvRecord"
  SftpAction:
    type: "string"
    description: ""
    enum:
    - "ConnectOnly"
    - "TestFileExists"
    - "TestFileDoesNotExist"
    - "DownLoadFile"
    x-enumNames:
    - "ConnectOnly"
    - "TestFileExists"
    - "TestFileDoesNotExist"
    - "DownLoadFile"
  BrowserType:
    type: "string"
    description: ""
    enum:
    - "Chrome"
    - "ChromeWithExtraMetrics"
    - "Edge"
    x-enumNames:
    - "Chrome"
    - "ChromeWithExtraMetrics"
    - "Edge"
  BrowserWindowDimensions:
    type: "object"
    required:
    - "Height"
    - "IsMobile"
    - "PixelRatio"
    - "Width"
    properties:
      IsMobile:
        type: "boolean"
      Width:
        type: "integer"
        format: "int32"
      Height:
        type: "integer"
        format: "int32"
      PixelRatio:
        type: "integer"
        format: "int32"
      MobileDevice:
        type: "string"
    example:
      PixelRatio: 9
      MobileDevice: "MobileDevice"
      Height: 8
      IsMobile: true
      Width: 6
  ErrorCondition:
    type: "object"
    required:
    - "ErrorConditionType"
    properties:
      ErrorConditionType:
        $ref: "#/definitions/ErrorCondition_ErrorConditionType"
      Value:
        type: "string"
        description: "The value of this error conditions (not used in all types)"
      Percentage:
        type: "string"
        description: "The percentage of this error conditions (not used in all types)"
      Level:
        $ref: "#/definitions/ErrorCondition_Level"
      MatchType:
        $ref: "#/definitions/ErrorCondition_MatchType"
      Effect:
        $ref: "#/definitions/ErrorCondition_Effect"
    example:
      MatchType: {}
      Percentage: "Percentage"
      Value: "Value"
      Level: {}
      Effect: {}
      ErrorConditionType: {}
  ErrorConditionType:
    type: "string"
    description: ""
    enum:
    - "LoadTimeLimit1"
    - "LoadTimeLimit2"
    - "TotalMinBytes"
    - "TotalMaxBytes"
    - "ContentMatch"
    - "ConsoleContentMatch"
    - "ConsoleLevel"
    - "HttpStatus"
    - "PageElementMaxSizeWithPercentage"
    - "PageElementFailedWithPercentage"
    - "TimeToFirstByteMaximum"
    - "RequestStartMaximum"
    - "DomCompleteMaximum"
    - "DomInteractiveMaximum"
    - "UseRecommendedCoreWebVitals"
    - "FirstContentfulPaintMaximum"
    - "LargestContentfulPaintMaximum"
    - "TimeToInteractiveMaximum"
    - "CumulativeLayoutShiftMaximum"
    - "TotalBlockingTimeMaximum"
    x-enumNames:
    - "LoadTimeLimit1"
    - "LoadTimeLimit2"
    - "TotalMinBytes"
    - "TotalMaxBytes"
    - "ContentMatch"
    - "ConsoleContentMatch"
    - "ConsoleLevel"
    - "HttpStatus"
    - "PageElementMaxSizeWithPercentage"
    - "PageElementFailedWithPercentage"
    - "TimeToFirstByteMaximum"
    - "RequestStartMaximum"
    - "DomCompleteMaximum"
    - "DomInteractiveMaximum"
    - "UseRecommendedCoreWebVitals"
    - "FirstContentfulPaintMaximum"
    - "LargestContentfulPaintMaximum"
    - "TimeToInteractiveMaximum"
    - "CumulativeLayoutShiftMaximum"
    - "TotalBlockingTimeMaximum"
  ErrorConditionConsoleLevel:
    type: "string"
    description: ""
    enum:
    - "Info"
    - "Warning"
    - "Error"
    x-enumNames:
    - "Info"
    - "Warning"
    - "Error"
  ErrorConditionMatchType:
    type: "string"
    description: ""
    enum:
    - "ErrorWhenContains"
    - "ErrorWhenNotContains"
    - "ErrorWhenContainsRegex"
    - "ErrorWhenNotContainsRegex"
    x-enumNames:
    - "ErrorWhenContains"
    - "ErrorWhenNotContains"
    - "ErrorWhenContainsRegex"
    - "ErrorWhenNotContainsRegex"
  ErrorConditionEffect:
    type: "string"
    description: ""
    enum:
    - "Indicate"
    - "Error"
    x-enumNames:
    - "Indicate"
    - "Error"
  MonitorAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    description: "Monitor group authorization"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  MonitorAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "ViewMonitorData"
    - "ViewMonitor"
    - "EditMonitor"
    x-enumNames:
    - "ViewMonitorData"
    - "ViewMonitor"
    - "EditMonitor"
  RegistrationResponse:
    type: "object"
    required:
    - "status"
    properties:
      UserName:
        type: "string"
        description: "The username of the new API account"
      Password:
        type: "string"
        description: "The password of the new API account"
      AccountId:
        type: "string"
        description: "The Uptrends Account Id for which the new API account was created"
      OperatorName:
        type: "string"
        description: "The Uptrends Operator on behalf of whom the new API account\
          \ was created"
      status:
        $ref: "#/definitions/RegisterStatus"
      message:
        type: "string"
    example:
      OperatorName: "OperatorName"
      UserName: "UserName"
      AccountId: "AccountId"
      message: "message"
      Password: "Password"
      status: {}
  RegisterStatus:
    type: "string"
    description: ""
    enum:
    - "OK"
    - "UnexpectedError"
    x-enumNames:
    - "OK"
    - "UnexpectedError"
  VaultItem:
    type: "object"
    properties:
      VaultItemGuid:
        type: "string"
        format: "guid"
        description: "The unique key of this vault item"
      Hash:
        type: "string"
        description: "The hash of this vault item"
      Name:
        type: "string"
        description: "The name of this vault item"
      Value:
        type: "string"
        description: "The value that is stored in this vault item. Not used for Certificate\
          \ Archives"
      VaultSectionGuid:
        type: "string"
        format: "guid"
        description: "The unique identifier of the vault section that this vault item\
          \ belongs to"
      VaultItemType:
        $ref: "#/definitions/VaultItem_VaultItemType"
      Notes:
        type: "string"
        description: "Notes about this vault item"
      UserName:
        type: "string"
        description: "The UserName of a credentialset"
      Password:
        type: "string"
        description: "The password associated with a credentialset"
      CertificateArchive:
        $ref: "#/definitions/VaultItem_CertificateArchive"
      FileInfo:
        $ref: "#/definitions/VaultItem_FileInfo"
      OneTimePasswordInfo:
        $ref: "#/definitions/VaultItem_OneTimePasswordInfo"
    example:
      VaultSectionGuid: "VaultSectionGuid"
      UserName: "UserName"
      FileInfo: {}
      VaultItemGuid: "VaultItemGuid"
      CertificateArchive: {}
      Value: "Value"
      OneTimePasswordInfo: {}
      Hash: "Hash"
      VaultItemType: {}
      Notes: "Notes"
      Name: "Name"
      Password: "Password"
  VaultItemTypes:
    type: "string"
    description: ""
    enum:
    - "CredentialSet"
    - "Certificate"
    - "CertificateArchive"
    - "File"
    - "OneTimePassword"
    x-enumNames:
    - "CredentialSet"
    - "Certificate"
    - "CertificateArchive"
    - "File"
    - "OneTimePassword"
  CertificateArchive:
    type: "object"
    required:
    - "NotAfter"
    - "NotBefore"
    properties:
      Issuer:
        type: "string"
        description: "The issuer of this certificate"
      NotBefore:
        example: "2023-01-24T13:42:18"
        description: "The start date of this certificate"
      NotAfter:
        example: "2023-01-24T13:42:18"
        description: "The certificate expiry date"
      Password:
        type: "string"
        description: "Used to specify a new or changed password. The value will be\
          \ encrypted when stored, and will not be displayed when a CertificateArchive\
          \ is retrieved."
      ArchiveData:
        type: "string"
        description: "Used to specify the certificate content as a base64 string.\
          \ The value will be encrypted when stored, and will not be displayed when\
          \ a CertificateArchive is retrieved."
  FileInfo:
    type: "object"
    required:
    - "Size"
    properties:
      Data:
        type: "string"
      Name:
        type: "string"
        description: "Name of the uploaded file."
      Size:
        type: "integer"
        format: "int32"
        description: "Size of the uploaded file."
  OneTimePasswordInfo:
    type: "object"
    required:
    - "Digits"
    - "HashAlgorithm"
    - "Period"
    properties:
      Secret:
        type: "string"
      Digits:
        type: "integer"
      Period:
        type: "integer"
      HashAlgorithm:
        $ref: "#/definitions/HashAlgorithm"
  HashAlgorithm:
    type: "string"
    description: ""
    enum:
    - "SHA256"
    - "SHA512"
    - "SHA1"
    x-enumNames:
    - "SHA256"
    - "SHA512"
    - "SHA1"
  VaultSection:
    type: "object"
    required:
    - "VaultSectionGuid"
    properties:
      VaultSectionGuid:
        type: "string"
        format: "guid"
        description: "The Guid of this vault section"
      Name:
        type: "string"
        description: "The name for this vault section"
    example:
      VaultSectionGuid: "VaultSectionGuid"
      Name: "Name"
  VaultSectionAuthorization:
    type: "object"
    required:
    - "AuthorizationType"
    properties:
      AuthorizationId:
        type: "string"
        format: "guid"
        description: "The unique ID of this authorization"
      AuthorizationType:
        $ref: "#/definitions/PSPAuthorization_AuthorizationType"
      OperatorGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator (NULL if this authorization is for\
          \ an operator group)"
      OperatorGroupGuid:
        type: "string"
        format: "guid"
        description: "The GUID of the operator group (NULL if this authorization is\
          \ for an operator)"
    example:
      AuthorizationId: "AuthorizationId"
      OperatorGuid: "OperatorGuid"
      AuthorizationType: {}
      OperatorGroupGuid: "OperatorGroupGuid"
  VaultSectionAuthorizationType:
    type: "string"
    description: ""
    enum:
    - "ViewVaultSection"
    - "ChangeVaultSection"
    x-enumNames:
    - "ViewVaultSection"
    - "ChangeVaultSection"
  ServerHealth_StatusDetails:
    type: "object"
    description: "The detailed status of the server"
  SelectedPeriod_SelectedPeriodType:
    type: "object"
    description: "The type of period"
  SelectedPeriod_PresetPeriod:
    type: "object"
    description: "The requested time period."
  PSPAuthorization_AuthorizationType:
    type: "object"
    description: "The authorization type"
  StatisticsResponse_Links:
    type: "object"
    description: "Links with reference to self and next data set"
  StatisticsResponse_Meta:
    type: "object"
    description: "Meta data"
  Statistics_Attributes:
    type: "object"
    description: "Object attributes "
  AlertResponse_Cursors:
    type: "object"
    description: "Cursors can be used to navigate the dataset in a fixed manner"
  AlertAttributes_AlertType:
    type: "object"
    description: "Alert type indicating if this was an Error or Ok alert."
  Integration_Type:
    type: "object"
    description: "Type of Integration in Alert Definition Escalation Level"
  MonitorStatusResponse_Data:
    type: "object"
    description: "The resposne data/monitor checks"
  MonitorStatusAttributes_ErrorLevel:
    type: "object"
    description: "The error level for the monitor status"
  MaintenancePeriod_ScheduleMode:
    type: "object"
    description: "The schedule mode (one time, daily, weekly, monthly)"
  MaintenancePeriod_WeekDay:
    type: "object"
    description: "The weekday for this maintenance period (for weekly maintenance\
      \ periods only)"
  MaintenancePeriod_MaintenanceType:
    type: "object"
    description: "Indicates whether, during the maintenance periods, only alerting\
      \ will be disabled, or if the entire monitor will be stopped"
  Operator_SmsProvider:
    type: "object"
    description: "The SMS provider used to send out SMS alerts"
  MonitorCheckAttributes_ErrorLevel:
    type: "object"
    description: "A value that represents the OK/Error state for this check: NoError\
      \ if the result was OK, Unconfirmed if an error was found, Confirmed if an error\
      \ was found as a double check, right after an Unconfirmed error."
  HttpEngineAttributes_TimingInfo:
    type: "object"
    description: "Timing info"
  HttpEngineStep_AssertionResultsInfo:
    type: "object"
    description: "Results of the assertions in this step"
  WaterfallInfo_PageLoadMetrics:
    type: "object"
    description: "Metrics for describing the load cycle of the entire web page. \n\
      Includes CoreWebVitals and other related metrics."
  WaterfallInfo_W3CNavigationTiming:
    type: "object"
    description: "W3C Navigation Timing metrics"
  Monitor_MonitorMode:
    type: "object"
  Monitor_TransactionStepDefinition:
    type: "object"
    description: "Only valid for Transaction monitors: the data structure that specifies\
      \ the transaction steps (and sub steps) to execute."
  MsaStep_BodyType:
    type: "object"
    description: "Determines what kind of body the request will have."
  UserDefinedFunction_JwtAlgorithm:
    type: "object"
    description: "This property is not supported yet"
  ErrorCondition_ErrorConditionType:
    type: "object"
    description: "Error condition type"
  ErrorCondition_Level:
    type: "object"
    description: "The level of this error conditions (not used in all types)"
  ErrorCondition_MatchType:
    type: "object"
    description: "The match type of this error conditions (not used in all types)"
  ErrorCondition_Effect:
    type: "object"
    description: "The effect of this error conditions (not used in all types)"
  VaultItem_VaultItemType:
    type: "object"
    description: "The vault item type"
  VaultItem_CertificateArchive:
    type: "object"
    description: "The certificate archive that is stored in this vault item, if applicable"
  VaultItem_FileInfo:
    type: "object"
    description: "The file info that is stored in this vault item, if applicable"
  VaultItem_OneTimePasswordInfo:
    type: "object"
    description: "The one-time password info that is stored in this vault item, if\
      \ applicable"
x-generator: "NSwag v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))"
